welcome to iREPL
ok, loaded 38 functions from data/libs/prelude.icicle
ok, loaded test/cli/repl/data.psv, 13 rows
> -- Show everything
> ok, flatten (simplified) is now on
ok, c is now on
> > -- Enable C evaluation
> ok, c evaluation now on
                   _________-----_____
        _____------           __      ----_
 ___----             ___------              \
    ----________        ----                 \
                -----__    |             _____)
                     __-                /     \
         _______-----    ___--          \    /)\
   ------_______      ---____            \__/  /
                -----__    \ --    _          /\
                       --__--__     \_____/   \_/\
                               ----|   /          |
                                   |  |___________|
                                   |  | ((_(_)| )_)
                                   |  \_((_(_)|/(_)
                                   \             (
                                    \_____________)
> > -- An interesting expression with structs and strings
> - Flattened (simplified), not typechecked:
conv/3 = TIME
conv/4 = MAX_MAP_SIZE
init acc/conv/11/simpflat/22@{Error} = ExceptNotAnError@{Error};
init acc/conv/11/simpflat/23@{Double} = 0.0@{Double};
init acc/s/reify/6/conv/12/simpflat/28@{Error} = ExceptFold1NoValue@{Error};
init acc/s/reify/6/conv/12/simpflat/29@{Double} = 0.0@{Double};
init acc/s/reify/6/conv/12/simpflat/30@{Double} = 0.0@{Double};
init acc/conv/76/simpflat/31@{Error} = ExceptNotAnError@{Error};
init acc/conv/76/simpflat/32@{Double} = 0.0@{Double};
init acc/a/conv/77/simpflat/37@{Error} = ExceptNotAnError@{Error};
init acc/a/conv/77/simpflat/38@{Double} = 0.0@{Double};
init acc/a/conv/77/simpflat/39@{Double} = 0.0@{Double};
init acc/a/conv/77/simpflat/40@{Double} = 0.0@{Double};
load_resumable@{Error} acc/a/conv/77/simpflat/37;
load_resumable@{Double} acc/a/conv/77/simpflat/38;
load_resumable@{Double} acc/a/conv/77/simpflat/39;
load_resumable@{Double} acc/a/conv/77/simpflat/40;
load_resumable@{Error} acc/conv/76/simpflat/31;
load_resumable@{Double} acc/conv/76/simpflat/32;
load_resumable@{Error} acc/s/reify/6/conv/12/simpflat/28;
load_resumable@{Double} acc/s/reify/6/conv/12/simpflat/29;
load_resumable@{Double} acc/s/reify/6/conv/12/simpflat/30;
load_resumable@{Error} acc/conv/11/simpflat/22;
load_resumable@{Double} acc/conv/11/simpflat/23;
for_facts (conv/2@{Time}, conv/1@{FactIdentifier}, conv/0/simpflat/307@{Error}, conv/0/simpflat/308@{String}, conv/0/simpflat/309@{Int}, conv/0/simpflat/310@{Time}) in new
{
  init flat/0/simpflat/41@{Error} = ExceptNotAnError@{Error};
  init flat/0/simpflat/42@{Int} = 0@{Int};
  if (eq#@{Error} conv/0/simpflat/307 (ExceptNotAnError@{Error}))
  {
    write flat/0/simpflat/41 = ExceptNotAnError@{Error};
    write flat/0/simpflat/42 = conv/0/simpflat/309;
  }
  else
  {
    write flat/0/simpflat/41 = conv/0/simpflat/307;
    write flat/0/simpflat/42 = 0@{Int};
  }
  read flat/0/simpflat/43 = flat/0/simpflat/41 [Error];
  read flat/0/simpflat/44 = flat/0/simpflat/42 [Int];
  init flat/1/simpflat/45@{Error} = ExceptNotAnError@{Error};
  init flat/1/simpflat/46@{Double} = 0.0@{Double};
  if (eq#@{Error} flat/0/simpflat/43 (ExceptNotAnError@{Error}))
  {
    write flat/1/simpflat/45 = ExceptNotAnError@{Error};
    write flat/1/simpflat/46 = doubleOfInt# flat/0/simpflat/44;
  }
  else
  {
    write flat/1/simpflat/45 = flat/0/simpflat/43;
    write flat/1/simpflat/46 = 0.0@{Double};
  }
  read flat/1/simpflat/47 = flat/1/simpflat/45 [Error];
  read flat/1/simpflat/48 = flat/1/simpflat/46 [Double];
  init flat/2/simpflat/49@{Error} = ExceptNotAnError@{Error};
  init flat/2/simpflat/50@{Double} = 0.0@{Double};
  if (eq#@{Error} flat/1/simpflat/47 (ExceptNotAnError@{Error}))
  {
    write flat/2/simpflat/49 = ExceptNotAnError@{Error};
    write flat/2/simpflat/50 = flat/1/simpflat/48;
  }
  else
  {
    write flat/2/simpflat/49 = flat/1/simpflat/47;
    write flat/2/simpflat/50 = 0.0@{Double};
  }
  read flat/2/simpflat/51 = flat/2/simpflat/49 [Error];
  read flat/2/simpflat/52 = flat/2/simpflat/50 [Double];
  write acc/conv/11/simpflat/22 = flat/2/simpflat/51;
  write acc/conv/11/simpflat/23 = flat/2/simpflat/52;
  read conv/11/aval/1/simpflat/53 = acc/conv/11/simpflat/22 [Error];
  read conv/11/aval/1/simpflat/54 = acc/conv/11/simpflat/23 [Double];
  read s/reify/6/conv/12/aval/0/simpflat/59 = acc/s/reify/6/conv/12/simpflat/28 [Error];
  read s/reify/6/conv/12/aval/0/simpflat/60 = acc/s/reify/6/conv/12/simpflat/29 [Double];
  read s/reify/6/conv/12/aval/0/simpflat/61 = acc/s/reify/6/conv/12/simpflat/30 [Double];
  init flat/3/simpflat/62@{Error} = ExceptNotAnError@{Error};
  init flat/3/simpflat/63@{Double} = 0.0@{Double};
  init flat/3/simpflat/64@{Double} = 0.0@{Double};
  if (eq#@{Error} s/reify/6/conv/12/aval/0/simpflat/59 (ExceptNotAnError@{Error}))
  {
    init flat/10/simpflat/65@{Error} = ExceptNotAnError@{Error};
    init flat/10/simpflat/66@{Double} = 0.0@{Double};
    init flat/10/simpflat/67@{Double} = 0.0@{Double};
    if (eq#@{Error} s/reify/6/conv/12/aval/0/simpflat/59 (ExceptNotAnError@{Error}))
    {
      init flat/13/simpflat/68@{Error} = ExceptNotAnError@{Error};
      init flat/13/simpflat/69@{Double} = 0.0@{Double};
      if (eq#@{Error} conv/11/aval/1/simpflat/53 (ExceptNotAnError@{Error}))
      {
        let conv/25 = sub#@{Double} conv/11/aval/1/simpflat/54 s/reify/6/conv/12/aval/0/simpflat/60;
        init flat/35/simpflat/70@{Error} = ExceptNotAnError@{Error};
        init flat/35/simpflat/71@{Double} = 0.0@{Double};
        if (doubleIsValid# conv/25)
        {
          write flat/35/simpflat/70 = ExceptNotAnError@{Error};
          write flat/35/simpflat/71 = sub#@{Double} conv/11/aval/1/simpflat/54 s/reify/6/conv/12/aval/0/simpflat/60;
        }
        else
        {
          write flat/35/simpflat/70 = ExceptCannotCompute@{Error};
          write flat/35/simpflat/71 = 0.0@{Double};
        }
        read flat/35/simpflat/72 = flat/35/simpflat/70 [Error];
        read flat/35/simpflat/73 = flat/35/simpflat/71 [Double];
        write flat/13/simpflat/68 = flat/35/simpflat/72;
        write flat/13/simpflat/69 = flat/35/simpflat/73;
      }
      else
      {
        write flat/13/simpflat/68 = conv/11/aval/1/simpflat/53;
        write flat/13/simpflat/69 = 0.0@{Double};
      }
      read flat/13/simpflat/74 = flat/13/simpflat/68 [Error];
      read flat/13/simpflat/75 = flat/13/simpflat/69 [Double];
      init flat/14/simpflat/76@{Error} = ExceptNotAnError@{Error};
      init flat/14/simpflat/77@{Double} = 0.0@{Double};
      if (eq#@{Error} flat/13/simpflat/74 (ExceptNotAnError@{Error}))
      {
        let conv/30 = add#@{Double} s/reify/6/conv/12/aval/0/simpflat/61 (1.0@{Double});
        init flat/28/simpflat/78@{Error} = ExceptNotAnError@{Error};
        init flat/28/simpflat/79@{Double} = 0.0@{Double};
        if (doubleIsValid# conv/30)
        {
          write flat/28/simpflat/78 = ExceptNotAnError@{Error};
          write flat/28/simpflat/79 = add#@{Double} s/reify/6/conv/12/aval/0/simpflat/61 (1.0@{Double});
        }
        else
        {
          write flat/28/simpflat/78 = ExceptCannotCompute@{Error};
          write flat/28/simpflat/79 = 0.0@{Double};
        }
        read flat/28/simpflat/80 = flat/28/simpflat/78 [Error];
        read flat/28/simpflat/81 = flat/28/simpflat/79 [Double];
        init flat/29/simpflat/82@{Error} = ExceptNotAnError@{Error};
        init flat/29/simpflat/83@{Double} = 0.0@{Double};
        if (eq#@{Error} flat/28/simpflat/80 (ExceptNotAnError@{Error}))
        {
          let conv/34 = div# flat/13/simpflat/75 flat/28/simpflat/81;
          init flat/32/simpflat/84@{Error} = ExceptNotAnError@{Error};
          init flat/32/simpflat/85@{Double} = 0.0@{Double};
          if (doubleIsValid# conv/34)
          {
            write flat/32/simpflat/84 = ExceptNotAnError@{Error};
            write flat/32/simpflat/85 = div# flat/13/simpflat/75 flat/28/simpflat/81;
          }
          else
          {
            write flat/32/simpflat/84 = ExceptCannotCompute@{Error};
            write flat/32/simpflat/85 = 0.0@{Double};
          }
          read flat/32/simpflat/86 = flat/32/simpflat/84 [Error];
          read flat/32/simpflat/87 = flat/32/simpflat/85 [Double];
          write flat/29/simpflat/82 = flat/32/simpflat/86;
          write flat/29/simpflat/83 = flat/32/simpflat/87;
        }
        else
        {
          write flat/29/simpflat/82 = flat/28/simpflat/80;
          write flat/29/simpflat/83 = 0.0@{Double};
        }
        read flat/29/simpflat/88 = flat/29/simpflat/82 [Error];
        read flat/29/simpflat/89 = flat/29/simpflat/83 [Double];
        write flat/14/simpflat/76 = flat/29/simpflat/88;
        write flat/14/simpflat/77 = flat/29/simpflat/89;
      }
      else
      {
        write flat/14/simpflat/76 = flat/13/simpflat/74;
        write flat/14/simpflat/77 = 0.0@{Double};
      }
      read flat/14/simpflat/90 = flat/14/simpflat/76 [Error];
      read flat/14/simpflat/91 = flat/14/simpflat/77 [Double];
      init flat/15/simpflat/92@{Error} = ExceptNotAnError@{Error};
      init flat/15/simpflat/93@{Double} = 0.0@{Double};
      if (eq#@{Error} flat/14/simpflat/90 (ExceptNotAnError@{Error}))
      {
        let conv/40 = add#@{Double} s/reify/6/conv/12/aval/0/simpflat/60 flat/14/simpflat/91;
        init flat/25/simpflat/94@{Error} = ExceptNotAnError@{Error};
        init flat/25/simpflat/95@{Double} = 0.0@{Double};
        if (doubleIsValid# conv/40)
        {
          write flat/25/simpflat/94 = ExceptNotAnError@{Error};
          write flat/25/simpflat/95 = add#@{Double} s/reify/6/conv/12/aval/0/simpflat/60 flat/14/simpflat/91;
        }
        else
        {
          write flat/25/simpflat/94 = ExceptCannotCompute@{Error};
          write flat/25/simpflat/95 = 0.0@{Double};
        }
        read flat/25/simpflat/96 = flat/25/simpflat/94 [Error];
        read flat/25/simpflat/97 = flat/25/simpflat/95 [Double];
        write flat/15/simpflat/92 = flat/25/simpflat/96;
        write flat/15/simpflat/93 = flat/25/simpflat/97;
      }
      else
      {
        write flat/15/simpflat/92 = flat/14/simpflat/90;
        write flat/15/simpflat/93 = 0.0@{Double};
      }
      read flat/15/simpflat/98 = flat/15/simpflat/92 [Error];
      read flat/15/simpflat/99 = flat/15/simpflat/93 [Double];
      init flat/16/simpflat/100@{Error} = ExceptNotAnError@{Error};
      init flat/16/simpflat/101@{Double} = 0.0@{Double};
      init flat/16/simpflat/102@{Double} = 0.0@{Double};
      if (eq#@{Error} flat/15/simpflat/98 (ExceptNotAnError@{Error}))
      {
        let conv/45 = add#@{Double} s/reify/6/conv/12/aval/0/simpflat/61 (1.0@{Double});
        init flat/19/simpflat/103@{Error} = ExceptNotAnError@{Error};
        init flat/19/simpflat/104@{Double} = 0.0@{Double};
        if (doubleIsValid# conv/45)
        {
          write flat/19/simpflat/103 = ExceptNotAnError@{Error};
          write flat/19/simpflat/104 = add#@{Double} s/reify/6/conv/12/aval/0/simpflat/61 (1.0@{Double});
        }
        else
        {
          write flat/19/simpflat/103 = ExceptCannotCompute@{Error};
          write flat/19/simpflat/104 = 0.0@{Double};
        }
        read flat/19/simpflat/105 = flat/19/simpflat/103 [Error];
        read flat/19/simpflat/106 = flat/19/simpflat/104 [Double];
        init flat/20/simpflat/107@{Error} = ExceptNotAnError@{Error};
        init flat/20/simpflat/108@{Double} = 0.0@{Double};
        init flat/20/simpflat/109@{Double} = 0.0@{Double};
        if (eq#@{Error} flat/19/simpflat/105 (ExceptNotAnError@{Error}))
        {
          write flat/20/simpflat/107 = ExceptNotAnError@{Error};
          write flat/20/simpflat/108 = flat/15/simpflat/99;
          write flat/20/simpflat/109 = flat/19/simpflat/106;
        }
        else
        {
          write flat/20/simpflat/107 = flat/19/simpflat/105;
          write flat/20/simpflat/108 = 0.0@{Double};
          write flat/20/simpflat/109 = 0.0@{Double};
        }
        read flat/20/simpflat/110 = flat/20/simpflat/107 [Error];
        read flat/20/simpflat/111 = flat/20/simpflat/108 [Double];
        read flat/20/simpflat/112 = flat/20/simpflat/109 [Double];
        write flat/16/simpflat/100 = flat/20/simpflat/110;
        write flat/16/simpflat/101 = flat/20/simpflat/111;
        write flat/16/simpflat/102 = flat/20/simpflat/112;
      }
      else
      {
        write flat/16/simpflat/100 = flat/15/simpflat/98;
        write flat/16/simpflat/101 = 0.0@{Double};
        write flat/16/simpflat/102 = 0.0@{Double};
      }
      read flat/16/simpflat/113 = flat/16/simpflat/100 [Error];
      read flat/16/simpflat/114 = flat/16/simpflat/101 [Double];
      read flat/16/simpflat/115 = flat/16/simpflat/102 [Double];
      write flat/10/simpflat/65 = flat/16/simpflat/113;
      write flat/10/simpflat/66 = flat/16/simpflat/114;
      write flat/10/simpflat/67 = flat/16/simpflat/115;
    }
    else
    {
      write flat/10/simpflat/65 = s/reify/6/conv/12/aval/0/simpflat/59;
      write flat/10/simpflat/66 = 0.0@{Double};
      write flat/10/simpflat/67 = 0.0@{Double};
    }
    read flat/10/simpflat/116 = flat/10/simpflat/65 [Error];
    read flat/10/simpflat/117 = flat/10/simpflat/66 [Double];
    read flat/10/simpflat/118 = flat/10/simpflat/67 [Double];
    write flat/3/simpflat/62 = flat/10/simpflat/116;
    write flat/3/simpflat/63 = flat/10/simpflat/117;
    write flat/3/simpflat/64 = flat/10/simpflat/118;
  }
  else
  {
    init flat/6/simpflat/119@{Error} = ExceptNotAnError@{Error};
    init flat/6/simpflat/120@{Double} = 0.0@{Double};
    init flat/6/simpflat/121@{Double} = 0.0@{Double};
    if (eq#@{Error} (ExceptFold1NoValue@{Error}) s/reify/6/conv/12/aval/0/simpflat/59)
    {
      init flat/7/simpflat/122@{Error} = ExceptNotAnError@{Error};
      init flat/7/simpflat/123@{Double} = 0.0@{Double};
      init flat/7/simpflat/124@{Double} = 0.0@{Double};
      if (eq#@{Error} conv/11/aval/1/simpflat/53 (ExceptNotAnError@{Error}))
      {
        write flat/7/simpflat/122 = ExceptNotAnError@{Error};
        write flat/7/simpflat/123 = conv/11/aval/1/simpflat/54;
        write flat/7/simpflat/124 = 1.0@{Double};
      }
      else
      {
        write flat/7/simpflat/122 = conv/11/aval/1/simpflat/53;
        write flat/7/simpflat/123 = 0.0@{Double};
        write flat/7/simpflat/124 = 0.0@{Double};
      }
      read flat/7/simpflat/125 = flat/7/simpflat/122 [Error];
      read flat/7/simpflat/126 = flat/7/simpflat/123 [Double];
      read flat/7/simpflat/127 = flat/7/simpflat/124 [Double];
      write flat/6/simpflat/119 = flat/7/simpflat/125;
      write flat/6/simpflat/120 = flat/7/simpflat/126;
      write flat/6/simpflat/121 = flat/7/simpflat/127;
    }
    else
    {
      write flat/6/simpflat/119 = s/reify/6/conv/12/aval/0/simpflat/59;
      write flat/6/simpflat/120 = 0.0@{Double};
      write flat/6/simpflat/121 = 0.0@{Double};
    }
    read flat/6/simpflat/128 = flat/6/simpflat/119 [Error];
    read flat/6/simpflat/129 = flat/6/simpflat/120 [Double];
    read flat/6/simpflat/130 = flat/6/simpflat/121 [Double];
    write flat/3/simpflat/62 = flat/6/simpflat/128;
    write flat/3/simpflat/63 = flat/6/simpflat/129;
    write flat/3/simpflat/64 = flat/6/simpflat/130;
  }
  read flat/3/simpflat/131 = flat/3/simpflat/62 [Error];
  read flat/3/simpflat/132 = flat/3/simpflat/63 [Double];
  read flat/3/simpflat/133 = flat/3/simpflat/64 [Double];
  write acc/s/reify/6/conv/12/simpflat/28 = flat/3/simpflat/131;
  write acc/s/reify/6/conv/12/simpflat/29 = flat/3/simpflat/132;
  write acc/s/reify/6/conv/12/simpflat/30 = flat/3/simpflat/133;
  init flat/36/simpflat/134@{Error} = ExceptNotAnError@{Error};
  init flat/36/simpflat/135@{String} = ""@{String};
  if (eq#@{Error} conv/0/simpflat/307 (ExceptNotAnError@{Error}))
  {
    write flat/36/simpflat/134 = ExceptNotAnError@{Error};
    write flat/36/simpflat/135 = conv/0/simpflat/308;
  }
  else
  {
    write flat/36/simpflat/134 = conv/0/simpflat/307;
    write flat/36/simpflat/135 = ""@{String};
  }
  read flat/36/simpflat/136 = flat/36/simpflat/134 [Error];
  read flat/36/simpflat/137 = flat/36/simpflat/135 [String];
  init flat/37/simpflat/138@{Error} = ExceptNotAnError@{Error};
  init flat/37/simpflat/139@{Bool} = False@{Bool};
  if (eq#@{Error} flat/36/simpflat/136 (ExceptNotAnError@{Error}))
  {
    write flat/37/simpflat/138 = ExceptNotAnError@{Error};
    write flat/37/simpflat/139 = eq#@{String} flat/36/simpflat/137 ("torso"@{String});
  }
  else
  {
    write flat/37/simpflat/138 = flat/36/simpflat/136;
    write flat/37/simpflat/139 = False@{Bool};
  }
  read flat/37/simpflat/140 = flat/37/simpflat/138 [Error];
  read flat/37/simpflat/141 = flat/37/simpflat/139 [Bool];
  init flat/38@{Bool} = False@{Bool};
  if (eq#@{Error} flat/37/simpflat/140 (ExceptNotAnError@{Error}))
  {
    write flat/38 = flat/37/simpflat/141;
  }
  else
  {
    write flat/38 = True@{Bool};
  }
  read flat/38 = flat/38 [Bool];
  if (flat/38)
  {
    init flat/39/simpflat/142@{Error} = ExceptNotAnError@{Error};
    init flat/39/simpflat/143@{Int} = 0@{Int};
    if (eq#@{Error} conv/0/simpflat/307 (ExceptNotAnError@{Error}))
    {
      write flat/39/simpflat/142 = ExceptNotAnError@{Error};
      write flat/39/simpflat/143 = conv/0/simpflat/309;
    }
    else
    {
      write flat/39/simpflat/142 = conv/0/simpflat/307;
      write flat/39/simpflat/143 = 0@{Int};
    }
    read flat/39/simpflat/144 = flat/39/simpflat/142 [Error];
    read flat/39/simpflat/145 = flat/39/simpflat/143 [Int];
    init flat/40/simpflat/146@{Error} = ExceptNotAnError@{Error};
    init flat/40/simpflat/147@{Double} = 0.0@{Double};
    if (eq#@{Error} flat/39/simpflat/144 (ExceptNotAnError@{Error}))
    {
      write flat/40/simpflat/146 = ExceptNotAnError@{Error};
      write flat/40/simpflat/147 = doubleOfInt# flat/39/simpflat/145;
    }
    else
    {
      write flat/40/simpflat/146 = flat/39/simpflat/144;
      write flat/40/simpflat/147 = 0.0@{Double};
    }
    read flat/40/simpflat/148 = flat/40/simpflat/146 [Error];
    read flat/40/simpflat/149 = flat/40/simpflat/147 [Double];
    write acc/conv/76/simpflat/31 = flat/40/simpflat/148;
    write acc/conv/76/simpflat/32 = flat/40/simpflat/149;
    read conv/76/aval/3/simpflat/150 = acc/conv/76/simpflat/31 [Error];
    read conv/76/aval/3/simpflat/151 = acc/conv/76/simpflat/32 [Double];
    read a/conv/77/aval/2/simpflat/156 = acc/a/conv/77/simpflat/37 [Error];
    read a/conv/77/aval/2/simpflat/157 = acc/a/conv/77/simpflat/38 [Double];
    read a/conv/77/aval/2/simpflat/158 = acc/a/conv/77/simpflat/39 [Double];
    read a/conv/77/aval/2/simpflat/159 = acc/a/conv/77/simpflat/40 [Double];
    init flat/41/simpflat/160@{Error} = ExceptNotAnError@{Error};
    init flat/41/simpflat/161@{Double} = 0.0@{Double};
    init flat/41/simpflat/162@{Double} = 0.0@{Double};
    init flat/41/simpflat/163@{Double} = 0.0@{Double};
    if (eq#@{Error} a/conv/77/aval/2/simpflat/156 (ExceptNotAnError@{Error}))
    {
      let conv/84 = add#@{Double} a/conv/77/aval/2/simpflat/157 (1.0@{Double});
      init flat/44/simpflat/164@{Error} = ExceptNotAnError@{Error};
      init flat/44/simpflat/165@{Double} = 0.0@{Double};
      if (doubleIsValid# conv/84)
      {
        write flat/44/simpflat/164 = ExceptNotAnError@{Error};
        write flat/44/simpflat/165 = add#@{Double} a/conv/77/aval/2/simpflat/157 (1.0@{Double});
      }
      else
      {
        write flat/44/simpflat/164 = ExceptCannotCompute@{Error};
        write flat/44/simpflat/165 = 0.0@{Double};
      }
      read flat/44/simpflat/166 = flat/44/simpflat/164 [Error];
      read flat/44/simpflat/167 = flat/44/simpflat/165 [Double];
      init flat/45/simpflat/168@{Error} = ExceptNotAnError@{Error};
      init flat/45/simpflat/169@{Double} = 0.0@{Double};
      if (eq#@{Error} conv/76/aval/3/simpflat/150 (ExceptNotAnError@{Error}))
      {
        let conv/89 = sub#@{Double} conv/76/aval/3/simpflat/151 a/conv/77/aval/2/simpflat/158;
        init flat/89/simpflat/170@{Error} = ExceptNotAnError@{Error};
        init flat/89/simpflat/171@{Double} = 0.0@{Double};
        if (doubleIsValid# conv/89)
        {
          write flat/89/simpflat/170 = ExceptNotAnError@{Error};
          write flat/89/simpflat/171 = sub#@{Double} conv/76/aval/3/simpflat/151 a/conv/77/aval/2/simpflat/158;
        }
        else
        {
          write flat/89/simpflat/170 = ExceptCannotCompute@{Error};
          write flat/89/simpflat/171 = 0.0@{Double};
        }
        read flat/89/simpflat/172 = flat/89/simpflat/170 [Error];
        read flat/89/simpflat/173 = flat/89/simpflat/171 [Double];
        write flat/45/simpflat/168 = flat/89/simpflat/172;
        write flat/45/simpflat/169 = flat/89/simpflat/173;
      }
      else
      {
        write flat/45/simpflat/168 = conv/76/aval/3/simpflat/150;
        write flat/45/simpflat/169 = 0.0@{Double};
      }
      read flat/45/simpflat/174 = flat/45/simpflat/168 [Error];
      read flat/45/simpflat/175 = flat/45/simpflat/169 [Double];
      init flat/46/simpflat/176@{Error} = ExceptNotAnError@{Error};
      init flat/46/simpflat/177@{Double} = 0.0@{Double};
      if (eq#@{Error} flat/45/simpflat/174 (ExceptNotAnError@{Error}))
      {
        init flat/83/simpflat/178@{Error} = ExceptNotAnError@{Error};
        init flat/83/simpflat/179@{Double} = 0.0@{Double};
        if (eq#@{Error} flat/44/simpflat/166 (ExceptNotAnError@{Error}))
        {
          let conv/97 = div# flat/45/simpflat/175 flat/44/simpflat/167;
          init flat/86/simpflat/180@{Error} = ExceptNotAnError@{Error};
          init flat/86/simpflat/181@{Double} = 0.0@{Double};
          if (doubleIsValid# conv/97)
          {
            write flat/86/simpflat/180 = ExceptNotAnError@{Error};
            write flat/86/simpflat/181 = div# flat/45/simpflat/175 flat/44/simpflat/167;
          }
          else
          {
            write flat/86/simpflat/180 = ExceptCannotCompute@{Error};
            write flat/86/simpflat/181 = 0.0@{Double};
          }
          read flat/86/simpflat/182 = flat/86/simpflat/180 [Error];
          read flat/86/simpflat/183 = flat/86/simpflat/181 [Double];
          write flat/83/simpflat/178 = flat/86/simpflat/182;
          write flat/83/simpflat/179 = flat/86/simpflat/183;
        }
        else
        {
          write flat/83/simpflat/178 = flat/44/simpflat/166;
          write flat/83/simpflat/179 = 0.0@{Double};
        }
        read flat/83/simpflat/184 = flat/83/simpflat/178 [Error];
        read flat/83/simpflat/185 = flat/83/simpflat/179 [Double];
        write flat/46/simpflat/176 = flat/83/simpflat/184;
        write flat/46/simpflat/177 = flat/83/simpflat/185;
      }
      else
      {
        write flat/46/simpflat/176 = flat/45/simpflat/174;
        write flat/46/simpflat/177 = 0.0@{Double};
      }
      read flat/46/simpflat/186 = flat/46/simpflat/176 [Error];
      read flat/46/simpflat/187 = flat/46/simpflat/177 [Double];
      init flat/47/simpflat/188@{Error} = ExceptNotAnError@{Error};
      init flat/47/simpflat/189@{Double} = 0.0@{Double};
      if (eq#@{Error} flat/46/simpflat/186 (ExceptNotAnError@{Error}))
      {
        let conv/103 = add#@{Double} a/conv/77/aval/2/simpflat/158 flat/46/simpflat/187;
        init flat/80/simpflat/190@{Error} = ExceptNotAnError@{Error};
        init flat/80/simpflat/191@{Double} = 0.0@{Double};
        if (doubleIsValid# conv/103)
        {
          write flat/80/simpflat/190 = ExceptNotAnError@{Error};
          write flat/80/simpflat/191 = add#@{Double} a/conv/77/aval/2/simpflat/158 flat/46/simpflat/187;
        }
        else
        {
          write flat/80/simpflat/190 = ExceptCannotCompute@{Error};
          write flat/80/simpflat/191 = 0.0@{Double};
        }
        read flat/80/simpflat/192 = flat/80/simpflat/190 [Error];
        read flat/80/simpflat/193 = flat/80/simpflat/191 [Double];
        write flat/47/simpflat/188 = flat/80/simpflat/192;
        write flat/47/simpflat/189 = flat/80/simpflat/193;
      }
      else
      {
        write flat/47/simpflat/188 = flat/46/simpflat/186;
        write flat/47/simpflat/189 = 0.0@{Double};
      }
      read flat/47/simpflat/194 = flat/47/simpflat/188 [Error];
      read flat/47/simpflat/195 = flat/47/simpflat/189 [Double];
      init flat/48/simpflat/196@{Error} = ExceptNotAnError@{Error};
      init flat/48/simpflat/197@{Double} = 0.0@{Double};
      if (eq#@{Error} flat/45/simpflat/174 (ExceptNotAnError@{Error}))
      {
        init flat/67/simpflat/198@{Error} = ExceptNotAnError@{Error};
        init flat/67/simpflat/199@{Double} = 0.0@{Double};
        if (eq#@{Error} conv/76/aval/3/simpflat/150 (ExceptNotAnError@{Error}))
        {
          init flat/74/simpflat/200@{Error} = ExceptNotAnError@{Error};
          init flat/74/simpflat/201@{Double} = 0.0@{Double};
          if (eq#@{Error} flat/47/simpflat/194 (ExceptNotAnError@{Error}))
          {
            let conv/113 = sub#@{Double} conv/76/aval/3/simpflat/151 flat/47/simpflat/195;
            init flat/77/simpflat/202@{Error} = ExceptNotAnError@{Error};
            init flat/77/simpflat/203@{Double} = 0.0@{Double};
            if (doubleIsValid# conv/113)
            {
              write flat/77/simpflat/202 = ExceptNotAnError@{Error};
              write flat/77/simpflat/203 = sub#@{Double} conv/76/aval/3/simpflat/151 flat/47/simpflat/195;
            }
            else
            {
              write flat/77/simpflat/202 = ExceptCannotCompute@{Error};
              write flat/77/simpflat/203 = 0.0@{Double};
            }
            read flat/77/simpflat/204 = flat/77/simpflat/202 [Error];
            read flat/77/simpflat/205 = flat/77/simpflat/203 [Double];
            write flat/74/simpflat/200 = flat/77/simpflat/204;
            write flat/74/simpflat/201 = flat/77/simpflat/205;
          }
          else
          {
            write flat/74/simpflat/200 = flat/47/simpflat/194;
            write flat/74/simpflat/201 = 0.0@{Double};
          }
          read flat/74/simpflat/206 = flat/74/simpflat/200 [Error];
          read flat/74/simpflat/207 = flat/74/simpflat/201 [Double];
          write flat/67/simpflat/198 = flat/74/simpflat/206;
          write flat/67/simpflat/199 = flat/74/simpflat/207;
        }
        else
        {
          write flat/67/simpflat/198 = conv/76/aval/3/simpflat/150;
          write flat/67/simpflat/199 = 0.0@{Double};
        }
        read flat/67/simpflat/208 = flat/67/simpflat/198 [Error];
        read flat/67/simpflat/209 = flat/67/simpflat/199 [Double];
        init flat/68/simpflat/210@{Error} = ExceptNotAnError@{Error};
        init flat/68/simpflat/211@{Double} = 0.0@{Double};
        if (eq#@{Error} flat/67/simpflat/208 (ExceptNotAnError@{Error}))
        {
          let conv/119 = mul#@{Double} flat/45/simpflat/175 flat/67/simpflat/209;
          init flat/71/simpflat/212@{Error} = ExceptNotAnError@{Error};
          init flat/71/simpflat/213@{Double} = 0.0@{Double};
          if (doubleIsValid# conv/119)
          {
            write flat/71/simpflat/212 = ExceptNotAnError@{Error};
            write flat/71/simpflat/213 = mul#@{Double} flat/45/simpflat/175 flat/67/simpflat/209;
          }
          else
          {
            write flat/71/simpflat/212 = ExceptCannotCompute@{Error};
            write flat/71/simpflat/213 = 0.0@{Double};
          }
          read flat/71/simpflat/214 = flat/71/simpflat/212 [Error];
          read flat/71/simpflat/215 = flat/71/simpflat/213 [Double];
          write flat/68/simpflat/210 = flat/71/simpflat/214;
          write flat/68/simpflat/211 = flat/71/simpflat/215;
        }
        else
        {
          write flat/68/simpflat/210 = flat/67/simpflat/208;
          write flat/68/simpflat/211 = 0.0@{Double};
        }
        read flat/68/simpflat/216 = flat/68/simpflat/210 [Error];
        read flat/68/simpflat/217 = flat/68/simpflat/211 [Double];
        write flat/48/simpflat/196 = flat/68/simpflat/216;
        write flat/48/simpflat/197 = flat/68/simpflat/217;
      }
      else
      {
        write flat/48/simpflat/196 = flat/45/simpflat/174;
        write flat/48/simpflat/197 = 0.0@{Double};
      }
      read flat/48/simpflat/218 = flat/48/simpflat/196 [Error];
      read flat/48/simpflat/219 = flat/48/simpflat/197 [Double];
      init flat/49/simpflat/220@{Error} = ExceptNotAnError@{Error};
      init flat/49/simpflat/221@{Double} = 0.0@{Double};
      if (eq#@{Error} flat/48/simpflat/218 (ExceptNotAnError@{Error}))
      {
        let conv/125 = add#@{Double} a/conv/77/aval/2/simpflat/159 flat/48/simpflat/219;
        init flat/64/simpflat/222@{Error} = ExceptNotAnError@{Error};
        init flat/64/simpflat/223@{Double} = 0.0@{Double};
        if (doubleIsValid# conv/125)
        {
          write flat/64/simpflat/222 = ExceptNotAnError@{Error};
          write flat/64/simpflat/223 = add#@{Double} a/conv/77/aval/2/simpflat/159 flat/48/simpflat/219;
        }
        else
        {
          write flat/64/simpflat/222 = ExceptCannotCompute@{Error};
          write flat/64/simpflat/223 = 0.0@{Double};
        }
        read flat/64/simpflat/224 = flat/64/simpflat/222 [Error];
        read flat/64/simpflat/225 = flat/64/simpflat/223 [Double];
        write flat/49/simpflat/220 = flat/64/simpflat/224;
        write flat/49/simpflat/221 = flat/64/simpflat/225;
      }
      else
      {
        write flat/49/simpflat/220 = flat/48/simpflat/218;
        write flat/49/simpflat/221 = 0.0@{Double};
      }
      read flat/49/simpflat/226 = flat/49/simpflat/220 [Error];
      read flat/49/simpflat/227 = flat/49/simpflat/221 [Double];
      init flat/50/simpflat/228@{Error} = ExceptNotAnError@{Error};
      init flat/50/simpflat/229@{Double} = 0.0@{Double};
      init flat/50/simpflat/230@{Double} = 0.0@{Double};
      if (eq#@{Error} flat/44/simpflat/166 (ExceptNotAnError@{Error}))
      {
        init flat/59/simpflat/231@{Error} = ExceptNotAnError@{Error};
        init flat/59/simpflat/232@{Double} = 0.0@{Double};
        init flat/59/simpflat/233@{Double} = 0.0@{Double};
        if (eq#@{Error} flat/47/simpflat/194 (ExceptNotAnError@{Error}))
        {
          write flat/59/simpflat/231 = ExceptNotAnError@{Error};
          write flat/59/simpflat/232 = flat/44/simpflat/167;
          write flat/59/simpflat/233 = flat/47/simpflat/195;
        }
        else
        {
          write flat/59/simpflat/231 = flat/47/simpflat/194;
          write flat/59/simpflat/232 = 0.0@{Double};
          write flat/59/simpflat/233 = 0.0@{Double};
        }
        read flat/59/simpflat/234 = flat/59/simpflat/231 [Error];
        read flat/59/simpflat/235 = flat/59/simpflat/232 [Double];
        read flat/59/simpflat/236 = flat/59/simpflat/233 [Double];
        write flat/50/simpflat/228 = flat/59/simpflat/234;
        write flat/50/simpflat/229 = flat/59/simpflat/235;
        write flat/50/simpflat/230 = flat/59/simpflat/236;
      }
      else
      {
        write flat/50/simpflat/228 = flat/44/simpflat/166;
        write flat/50/simpflat/229 = 0.0@{Double};
        write flat/50/simpflat/230 = 0.0@{Double};
      }
      read flat/50/simpflat/237 = flat/50/simpflat/228 [Error];
      read flat/50/simpflat/238 = flat/50/simpflat/229 [Double];
      read flat/50/simpflat/239 = flat/50/simpflat/230 [Double];
      init flat/51/simpflat/240@{Error} = ExceptNotAnError@{Error};
      init flat/51/simpflat/241@{Double} = 0.0@{Double};
      init flat/51/simpflat/242@{Double} = 0.0@{Double};
      init flat/51/simpflat/243@{Double} = 0.0@{Double};
      if (eq#@{Error} flat/50/simpflat/237 (ExceptNotAnError@{Error}))
      {
        init flat/54/simpflat/244@{Error} = ExceptNotAnError@{Error};
        init flat/54/simpflat/245@{Double} = 0.0@{Double};
        init flat/54/simpflat/246@{Double} = 0.0@{Double};
        init flat/54/simpflat/247@{Double} = 0.0@{Double};
        if (eq#@{Error} flat/49/simpflat/226 (ExceptNotAnError@{Error}))
        {
          write flat/54/simpflat/244 = ExceptNotAnError@{Error};
          write flat/54/simpflat/245 = flat/50/simpflat/238;
          write flat/54/simpflat/246 = flat/50/simpflat/239;
          write flat/54/simpflat/247 = flat/49/simpflat/227;
        }
        else
        {
          write flat/54/simpflat/244 = flat/49/simpflat/226;
          write flat/54/simpflat/245 = 0.0@{Double};
          write flat/54/simpflat/246 = 0.0@{Double};
          write flat/54/simpflat/247 = 0.0@{Double};
        }
        read flat/54/simpflat/248 = flat/54/simpflat/244 [Error];
        read flat/54/simpflat/249 = flat/54/simpflat/245 [Double];
        read flat/54/simpflat/250 = flat/54/simpflat/246 [Double];
        read flat/54/simpflat/251 = flat/54/simpflat/247 [Double];
        write flat/51/simpflat/240 = flat/54/simpflat/248;
        write flat/51/simpflat/241 = flat/54/simpflat/249;
        write flat/51/simpflat/242 = flat/54/simpflat/250;
        write flat/51/simpflat/243 = flat/54/simpflat/251;
      }
      else
      {
        write flat/51/simpflat/240 = flat/50/simpflat/237;
        write flat/51/simpflat/241 = 0.0@{Double};
        write flat/51/simpflat/242 = 0.0@{Double};
        write flat/51/simpflat/243 = 0.0@{Double};
      }
      read flat/51/simpflat/252 = flat/51/simpflat/240 [Error];
      read flat/51/simpflat/253 = flat/51/simpflat/241 [Double];
      read flat/51/simpflat/254 = flat/51/simpflat/242 [Double];
      read flat/51/simpflat/255 = flat/51/simpflat/243 [Double];
      write flat/41/simpflat/160 = flat/51/simpflat/252;
      write flat/41/simpflat/161 = flat/51/simpflat/253;
      write flat/41/simpflat/162 = flat/51/simpflat/254;
      write flat/41/simpflat/163 = flat/51/simpflat/255;
    }
    else
    {
      write flat/41/simpflat/160 = a/conv/77/aval/2/simpflat/156;
      write flat/41/simpflat/161 = 0.0@{Double};
      write flat/41/simpflat/162 = 0.0@{Double};
      write flat/41/simpflat/163 = 0.0@{Double};
    }
    read flat/41/simpflat/256 = flat/41/simpflat/160 [Error];
    read flat/41/simpflat/257 = flat/41/simpflat/161 [Double];
    read flat/41/simpflat/258 = flat/41/simpflat/162 [Double];
    read flat/41/simpflat/259 = flat/41/simpflat/163 [Double];
    write acc/a/conv/77/simpflat/37 = flat/41/simpflat/256;
    write acc/a/conv/77/simpflat/38 = flat/41/simpflat/257;
    write acc/a/conv/77/simpflat/39 = flat/41/simpflat/258;
    write acc/a/conv/77/simpflat/40 = flat/41/simpflat/259;
  }
}
save_resumable@{Error} acc/a/conv/77/simpflat/37;
save_resumable@{Double} acc/a/conv/77/simpflat/38;
save_resumable@{Double} acc/a/conv/77/simpflat/39;
save_resumable@{Double} acc/a/conv/77/simpflat/40;
save_resumable@{Error} acc/conv/76/simpflat/31;
save_resumable@{Double} acc/conv/76/simpflat/32;
save_resumable@{Error} acc/s/reify/6/conv/12/simpflat/28;
save_resumable@{Double} acc/s/reify/6/conv/12/simpflat/29;
save_resumable@{Double} acc/s/reify/6/conv/12/simpflat/30;
save_resumable@{Error} acc/conv/11/simpflat/22;
save_resumable@{Double} acc/conv/11/simpflat/23;
read a/conv/77/simpflat/260 = acc/a/conv/77/simpflat/37 [Error];
read a/conv/77/simpflat/261 = acc/a/conv/77/simpflat/38 [Double];
read a/conv/77/simpflat/263 = acc/a/conv/77/simpflat/40 [Double];
read s/reify/6/conv/12/simpflat/264 = acc/s/reify/6/conv/12/simpflat/28 [Error];
read s/reify/6/conv/12/simpflat/265 = acc/s/reify/6/conv/12/simpflat/29 [Double];
init flat/110/simpflat/267@{Error} = ExceptNotAnError@{Error};
init flat/110/simpflat/268@{Double} = 0.0@{Double};
if (eq#@{Error} s/reify/6/conv/12/simpflat/264 (ExceptNotAnError@{Error}))
{
  write flat/110/simpflat/267 = ExceptNotAnError@{Error};
  write flat/110/simpflat/268 = s/reify/6/conv/12/simpflat/265;
}
else
{
  write flat/110/simpflat/267 = s/reify/6/conv/12/simpflat/264;
  write flat/110/simpflat/268 = 0.0@{Double};
}
read flat/110/simpflat/269 = flat/110/simpflat/267 [Error];
read flat/110/simpflat/270 = flat/110/simpflat/268 [Double];
init flat/111/simpflat/271@{Error} = ExceptNotAnError@{Error};
init flat/111/simpflat/272@{Double} = 0.0@{Double};
if (eq#@{Error} flat/110/simpflat/269 (ExceptNotAnError@{Error}))
{
  init flat/114/simpflat/273@{Error} = ExceptNotAnError@{Error};
  init flat/114/simpflat/274@{Double} = 0.0@{Double};
  if (eq#@{Error} a/conv/77/simpflat/260 (ExceptNotAnError@{Error}))
  {
    let conv/152 = sub#@{Double} a/conv/77/simpflat/261 (1.0@{Double});
    init flat/125/simpflat/275@{Error} = ExceptNotAnError@{Error};
    init flat/125/simpflat/276@{Double} = 0.0@{Double};
    if (doubleIsValid# conv/152)
    {
      write flat/125/simpflat/275 = ExceptNotAnError@{Error};
      write flat/125/simpflat/276 = sub#@{Double} a/conv/77/simpflat/261 (1.0@{Double});
    }
    else
    {
      write flat/125/simpflat/275 = ExceptCannotCompute@{Error};
      write flat/125/simpflat/276 = 0.0@{Double};
    }
    read flat/125/simpflat/277 = flat/125/simpflat/275 [Error];
    read flat/125/simpflat/278 = flat/125/simpflat/276 [Double];
    init flat/126/simpflat/279@{Error} = ExceptNotAnError@{Error};
    init flat/126/simpflat/280@{Double} = 0.0@{Double};
    if (eq#@{Error} flat/125/simpflat/277 (ExceptNotAnError@{Error}))
    {
      let conv/158 = div# a/conv/77/simpflat/263 flat/125/simpflat/278;
      init flat/129/simpflat/281@{Error} = ExceptNotAnError@{Error};
      init flat/129/simpflat/282@{Double} = 0.0@{Double};
      if (doubleIsValid# conv/158)
      {
        write flat/129/simpflat/281 = ExceptNotAnError@{Error};
        write flat/129/simpflat/282 = div# a/conv/77/simpflat/263 flat/125/simpflat/278;
      }
      else
      {
        write flat/129/simpflat/281 = ExceptCannotCompute@{Error};
        write flat/129/simpflat/282 = 0.0@{Double};
      }
      read flat/129/simpflat/283 = flat/129/simpflat/281 [Error];
      read flat/129/simpflat/284 = flat/129/simpflat/282 [Double];
      write flat/126/simpflat/279 = flat/129/simpflat/283;
      write flat/126/simpflat/280 = flat/129/simpflat/284;
    }
    else
    {
      write flat/126/simpflat/279 = flat/125/simpflat/277;
      write flat/126/simpflat/280 = 0.0@{Double};
    }
    read flat/126/simpflat/285 = flat/126/simpflat/279 [Error];
    read flat/126/simpflat/286 = flat/126/simpflat/280 [Double];
    write flat/114/simpflat/273 = flat/126/simpflat/285;
    write flat/114/simpflat/274 = flat/126/simpflat/286;
  }
  else
  {
    write flat/114/simpflat/273 = a/conv/77/simpflat/260;
    write flat/114/simpflat/274 = 0.0@{Double};
  }
  read flat/114/simpflat/287 = flat/114/simpflat/273 [Error];
  read flat/114/simpflat/288 = flat/114/simpflat/274 [Double];
  init flat/115/simpflat/289@{Error} = ExceptNotAnError@{Error};
  init flat/115/simpflat/290@{Double} = 0.0@{Double};
  if (eq#@{Error} flat/114/simpflat/287 (ExceptNotAnError@{Error}))
  {
    let conv/172 = sqrt# flat/114/simpflat/288;
    init flat/122/simpflat/291@{Error} = ExceptNotAnError@{Error};
    init flat/122/simpflat/292@{Double} = 0.0@{Double};
    if (doubleIsValid# conv/172)
    {
      write flat/122/simpflat/291 = ExceptNotAnError@{Error};
      write flat/122/simpflat/292 = sqrt# flat/114/simpflat/288;
    }
    else
    {
      write flat/122/simpflat/291 = ExceptCannotCompute@{Error};
      write flat/122/simpflat/292 = 0.0@{Double};
    }
    read flat/122/simpflat/293 = flat/122/simpflat/291 [Error];
    read flat/122/simpflat/294 = flat/122/simpflat/292 [Double];
    write flat/115/simpflat/289 = flat/122/simpflat/293;
    write flat/115/simpflat/290 = flat/122/simpflat/294;
  }
  else
  {
    write flat/115/simpflat/289 = flat/114/simpflat/287;
    write flat/115/simpflat/290 = 0.0@{Double};
  }
  read flat/115/simpflat/295 = flat/115/simpflat/289 [Error];
  read flat/115/simpflat/296 = flat/115/simpflat/290 [Double];
  init flat/116/simpflat/297@{Error} = ExceptNotAnError@{Error};
  init flat/116/simpflat/298@{Double} = 0.0@{Double};
  if (eq#@{Error} flat/115/simpflat/295 (ExceptNotAnError@{Error}))
  {
    let conv/180 = mul#@{Double} flat/110/simpflat/270 flat/115/simpflat/296;
    init flat/119/simpflat/299@{Error} = ExceptNotAnError@{Error};
    init flat/119/simpflat/300@{Double} = 0.0@{Double};
    if (doubleIsValid# conv/180)
    {
      write flat/119/simpflat/299 = ExceptNotAnError@{Error};
      write flat/119/simpflat/300 = mul#@{Double} flat/110/simpflat/270 flat/115/simpflat/296;
    }
    else
    {
      write flat/119/simpflat/299 = ExceptCannotCompute@{Error};
      write flat/119/simpflat/300 = 0.0@{Double};
    }
    read flat/119/simpflat/301 = flat/119/simpflat/299 [Error];
    read flat/119/simpflat/302 = flat/119/simpflat/300 [Double];
    write flat/116/simpflat/297 = flat/119/simpflat/301;
    write flat/116/simpflat/298 = flat/119/simpflat/302;
  }
  else
  {
    write flat/116/simpflat/297 = flat/115/simpflat/295;
    write flat/116/simpflat/298 = 0.0@{Double};
  }
  read flat/116/simpflat/303 = flat/116/simpflat/297 [Error];
  read flat/116/simpflat/304 = flat/116/simpflat/298 [Double];
  write flat/111/simpflat/271 = flat/116/simpflat/303;
  write flat/111/simpflat/272 = flat/116/simpflat/304;
}
else
{
  write flat/111/simpflat/271 = flat/110/simpflat/269;
  write flat/111/simpflat/272 = 0.0@{Double};
}
read flat/111/simpflat/305 = flat/111/simpflat/271 [Error];
read flat/111/simpflat/306 = flat/111/simpflat/272 [Double];
output@{(Sum Error Double)} repl:output (flat/111/simpflat/305@{Error}, flat/111/simpflat/306@{Double});

- Flattened Avalanche (simplified), typechecked:
conv/3 = TIME
conv/4 = MAX_MAP_SIZE
init acc/conv/11/simpflat/22@{Error} = ExceptNotAnError@{Error};
init acc/conv/11/simpflat/23@{Double} = 0.0@{Double};
init acc/s/reify/6/conv/12/simpflat/28@{Error} = ExceptFold1NoValue@{Error};
init acc/s/reify/6/conv/12/simpflat/29@{Double} = 0.0@{Double};
init acc/s/reify/6/conv/12/simpflat/30@{Double} = 0.0@{Double};
init acc/conv/76/simpflat/31@{Error} = ExceptNotAnError@{Error};
init acc/conv/76/simpflat/32@{Double} = 0.0@{Double};
init acc/a/conv/77/simpflat/37@{Error} = ExceptNotAnError@{Error};
init acc/a/conv/77/simpflat/38@{Double} = 0.0@{Double};
init acc/a/conv/77/simpflat/39@{Double} = 0.0@{Double};
init acc/a/conv/77/simpflat/40@{Double} = 0.0@{Double};
load_resumable@{Error} acc/a/conv/77/simpflat/37;
load_resumable@{Double} acc/a/conv/77/simpflat/38;
load_resumable@{Double} acc/a/conv/77/simpflat/39;
load_resumable@{Double} acc/a/conv/77/simpflat/40;
load_resumable@{Error} acc/conv/76/simpflat/31;
load_resumable@{Double} acc/conv/76/simpflat/32;
load_resumable@{Error} acc/s/reify/6/conv/12/simpflat/28;
load_resumable@{Double} acc/s/reify/6/conv/12/simpflat/29;
load_resumable@{Double} acc/s/reify/6/conv/12/simpflat/30;
load_resumable@{Error} acc/conv/11/simpflat/22;
load_resumable@{Double} acc/conv/11/simpflat/23;
for_facts (conv/2@{Time}, conv/1@{FactIdentifier}, conv/0/simpflat/307@{Error}, conv/0/simpflat/308@{String}, conv/0/simpflat/309@{Int}, conv/0/simpflat/310@{Time}) in new
{
  init flat/0/simpflat/41@{Error} = ExceptNotAnError@{Error};
  init flat/0/simpflat/42@{Int} = 0@{Int};
  if (eq#@{Error} conv/0/simpflat/307 (ExceptNotAnError@{Error}))
  {
    write flat/0/simpflat/41 = ExceptNotAnError@{Error};
    write flat/0/simpflat/42 = conv/0/simpflat/309;
  }
  else
  {
    write flat/0/simpflat/41 = conv/0/simpflat/307;
    write flat/0/simpflat/42 = 0@{Int};
  }
  read flat/0/simpflat/43 = flat/0/simpflat/41 [Error];
  read flat/0/simpflat/44 = flat/0/simpflat/42 [Int];
  init flat/1/simpflat/45@{Error} = ExceptNotAnError@{Error};
  init flat/1/simpflat/46@{Double} = 0.0@{Double};
  if (eq#@{Error} flat/0/simpflat/43 (ExceptNotAnError@{Error}))
  {
    write flat/1/simpflat/45 = ExceptNotAnError@{Error};
    write flat/1/simpflat/46 = doubleOfInt# flat/0/simpflat/44;
  }
  else
  {
    write flat/1/simpflat/45 = flat/0/simpflat/43;
    write flat/1/simpflat/46 = 0.0@{Double};
  }
  read flat/1/simpflat/47 = flat/1/simpflat/45 [Error];
  read flat/1/simpflat/48 = flat/1/simpflat/46 [Double];
  init flat/2/simpflat/49@{Error} = ExceptNotAnError@{Error};
  init flat/2/simpflat/50@{Double} = 0.0@{Double};
  if (eq#@{Error} flat/1/simpflat/47 (ExceptNotAnError@{Error}))
  {
    write flat/2/simpflat/49 = ExceptNotAnError@{Error};
    write flat/2/simpflat/50 = flat/1/simpflat/48;
  }
  else
  {
    write flat/2/simpflat/49 = flat/1/simpflat/47;
    write flat/2/simpflat/50 = 0.0@{Double};
  }
  read flat/2/simpflat/51 = flat/2/simpflat/49 [Error];
  read flat/2/simpflat/52 = flat/2/simpflat/50 [Double];
  write acc/conv/11/simpflat/22 = flat/2/simpflat/51;
  write acc/conv/11/simpflat/23 = flat/2/simpflat/52;
  read conv/11/aval/1/simpflat/53 = acc/conv/11/simpflat/22 [Error];
  read conv/11/aval/1/simpflat/54 = acc/conv/11/simpflat/23 [Double];
  read s/reify/6/conv/12/aval/0/simpflat/59 = acc/s/reify/6/conv/12/simpflat/28 [Error];
  read s/reify/6/conv/12/aval/0/simpflat/60 = acc/s/reify/6/conv/12/simpflat/29 [Double];
  read s/reify/6/conv/12/aval/0/simpflat/61 = acc/s/reify/6/conv/12/simpflat/30 [Double];
  init flat/3/simpflat/62@{Error} = ExceptNotAnError@{Error};
  init flat/3/simpflat/63@{Double} = 0.0@{Double};
  init flat/3/simpflat/64@{Double} = 0.0@{Double};
  if (eq#@{Error} s/reify/6/conv/12/aval/0/simpflat/59 (ExceptNotAnError@{Error}))
  {
    init flat/10/simpflat/65@{Error} = ExceptNotAnError@{Error};
    init flat/10/simpflat/66@{Double} = 0.0@{Double};
    init flat/10/simpflat/67@{Double} = 0.0@{Double};
    if (eq#@{Error} s/reify/6/conv/12/aval/0/simpflat/59 (ExceptNotAnError@{Error}))
    {
      init flat/13/simpflat/68@{Error} = ExceptNotAnError@{Error};
      init flat/13/simpflat/69@{Double} = 0.0@{Double};
      if (eq#@{Error} conv/11/aval/1/simpflat/53 (ExceptNotAnError@{Error}))
      {
        let conv/25 = sub#@{Double} conv/11/aval/1/simpflat/54 s/reify/6/conv/12/aval/0/simpflat/60;
        init flat/35/simpflat/70@{Error} = ExceptNotAnError@{Error};
        init flat/35/simpflat/71@{Double} = 0.0@{Double};
        if (doubleIsValid# conv/25)
        {
          write flat/35/simpflat/70 = ExceptNotAnError@{Error};
          write flat/35/simpflat/71 = sub#@{Double} conv/11/aval/1/simpflat/54 s/reify/6/conv/12/aval/0/simpflat/60;
        }
        else
        {
          write flat/35/simpflat/70 = ExceptCannotCompute@{Error};
          write flat/35/simpflat/71 = 0.0@{Double};
        }
        read flat/35/simpflat/72 = flat/35/simpflat/70 [Error];
        read flat/35/simpflat/73 = flat/35/simpflat/71 [Double];
        write flat/13/simpflat/68 = flat/35/simpflat/72;
        write flat/13/simpflat/69 = flat/35/simpflat/73;
      }
      else
      {
        write flat/13/simpflat/68 = conv/11/aval/1/simpflat/53;
        write flat/13/simpflat/69 = 0.0@{Double};
      }
      read flat/13/simpflat/74 = flat/13/simpflat/68 [Error];
      read flat/13/simpflat/75 = flat/13/simpflat/69 [Double];
      init flat/14/simpflat/76@{Error} = ExceptNotAnError@{Error};
      init flat/14/simpflat/77@{Double} = 0.0@{Double};
      if (eq#@{Error} flat/13/simpflat/74 (ExceptNotAnError@{Error}))
      {
        let conv/30 = add#@{Double} s/reify/6/conv/12/aval/0/simpflat/61 (1.0@{Double});
        init flat/28/simpflat/78@{Error} = ExceptNotAnError@{Error};
        init flat/28/simpflat/79@{Double} = 0.0@{Double};
        if (doubleIsValid# conv/30)
        {
          write flat/28/simpflat/78 = ExceptNotAnError@{Error};
          write flat/28/simpflat/79 = add#@{Double} s/reify/6/conv/12/aval/0/simpflat/61 (1.0@{Double});
        }
        else
        {
          write flat/28/simpflat/78 = ExceptCannotCompute@{Error};
          write flat/28/simpflat/79 = 0.0@{Double};
        }
        read flat/28/simpflat/80 = flat/28/simpflat/78 [Error];
        read flat/28/simpflat/81 = flat/28/simpflat/79 [Double];
        init flat/29/simpflat/82@{Error} = ExceptNotAnError@{Error};
        init flat/29/simpflat/83@{Double} = 0.0@{Double};
        if (eq#@{Error} flat/28/simpflat/80 (ExceptNotAnError@{Error}))
        {
          let conv/34 = div# flat/13/simpflat/75 flat/28/simpflat/81;
          init flat/32/simpflat/84@{Error} = ExceptNotAnError@{Error};
          init flat/32/simpflat/85@{Double} = 0.0@{Double};
          if (doubleIsValid# conv/34)
          {
            write flat/32/simpflat/84 = ExceptNotAnError@{Error};
            write flat/32/simpflat/85 = div# flat/13/simpflat/75 flat/28/simpflat/81;
          }
          else
          {
            write flat/32/simpflat/84 = ExceptCannotCompute@{Error};
            write flat/32/simpflat/85 = 0.0@{Double};
          }
          read flat/32/simpflat/86 = flat/32/simpflat/84 [Error];
          read flat/32/simpflat/87 = flat/32/simpflat/85 [Double];
          write flat/29/simpflat/82 = flat/32/simpflat/86;
          write flat/29/simpflat/83 = flat/32/simpflat/87;
        }
        else
        {
          write flat/29/simpflat/82 = flat/28/simpflat/80;
          write flat/29/simpflat/83 = 0.0@{Double};
        }
        read flat/29/simpflat/88 = flat/29/simpflat/82 [Error];
        read flat/29/simpflat/89 = flat/29/simpflat/83 [Double];
        write flat/14/simpflat/76 = flat/29/simpflat/88;
        write flat/14/simpflat/77 = flat/29/simpflat/89;
      }
      else
      {
        write flat/14/simpflat/76 = flat/13/simpflat/74;
        write flat/14/simpflat/77 = 0.0@{Double};
      }
      read flat/14/simpflat/90 = flat/14/simpflat/76 [Error];
      read flat/14/simpflat/91 = flat/14/simpflat/77 [Double];
      init flat/15/simpflat/92@{Error} = ExceptNotAnError@{Error};
      init flat/15/simpflat/93@{Double} = 0.0@{Double};
      if (eq#@{Error} flat/14/simpflat/90 (ExceptNotAnError@{Error}))
      {
        let conv/40 = add#@{Double} s/reify/6/conv/12/aval/0/simpflat/60 flat/14/simpflat/91;
        init flat/25/simpflat/94@{Error} = ExceptNotAnError@{Error};
        init flat/25/simpflat/95@{Double} = 0.0@{Double};
        if (doubleIsValid# conv/40)
        {
          write flat/25/simpflat/94 = ExceptNotAnError@{Error};
          write flat/25/simpflat/95 = add#@{Double} s/reify/6/conv/12/aval/0/simpflat/60 flat/14/simpflat/91;
        }
        else
        {
          write flat/25/simpflat/94 = ExceptCannotCompute@{Error};
          write flat/25/simpflat/95 = 0.0@{Double};
        }
        read flat/25/simpflat/96 = flat/25/simpflat/94 [Error];
        read flat/25/simpflat/97 = flat/25/simpflat/95 [Double];
        write flat/15/simpflat/92 = flat/25/simpflat/96;
        write flat/15/simpflat/93 = flat/25/simpflat/97;
      }
      else
      {
        write flat/15/simpflat/92 = flat/14/simpflat/90;
        write flat/15/simpflat/93 = 0.0@{Double};
      }
      read flat/15/simpflat/98 = flat/15/simpflat/92 [Error];
      read flat/15/simpflat/99 = flat/15/simpflat/93 [Double];
      init flat/16/simpflat/100@{Error} = ExceptNotAnError@{Error};
      init flat/16/simpflat/101@{Double} = 0.0@{Double};
      init flat/16/simpflat/102@{Double} = 0.0@{Double};
      if (eq#@{Error} flat/15/simpflat/98 (ExceptNotAnError@{Error}))
      {
        let conv/45 = add#@{Double} s/reify/6/conv/12/aval/0/simpflat/61 (1.0@{Double});
        init flat/19/simpflat/103@{Error} = ExceptNotAnError@{Error};
        init flat/19/simpflat/104@{Double} = 0.0@{Double};
        if (doubleIsValid# conv/45)
        {
          write flat/19/simpflat/103 = ExceptNotAnError@{Error};
          write flat/19/simpflat/104 = add#@{Double} s/reify/6/conv/12/aval/0/simpflat/61 (1.0@{Double});
        }
        else
        {
          write flat/19/simpflat/103 = ExceptCannotCompute@{Error};
          write flat/19/simpflat/104 = 0.0@{Double};
        }
        read flat/19/simpflat/105 = flat/19/simpflat/103 [Error];
        read flat/19/simpflat/106 = flat/19/simpflat/104 [Double];
        init flat/20/simpflat/107@{Error} = ExceptNotAnError@{Error};
        init flat/20/simpflat/108@{Double} = 0.0@{Double};
        init flat/20/simpflat/109@{Double} = 0.0@{Double};
        if (eq#@{Error} flat/19/simpflat/105 (ExceptNotAnError@{Error}))
        {
          write flat/20/simpflat/107 = ExceptNotAnError@{Error};
          write flat/20/simpflat/108 = flat/15/simpflat/99;
          write flat/20/simpflat/109 = flat/19/simpflat/106;
        }
        else
        {
          write flat/20/simpflat/107 = flat/19/simpflat/105;
          write flat/20/simpflat/108 = 0.0@{Double};
          write flat/20/simpflat/109 = 0.0@{Double};
        }
        read flat/20/simpflat/110 = flat/20/simpflat/107 [Error];
        read flat/20/simpflat/111 = flat/20/simpflat/108 [Double];
        read flat/20/simpflat/112 = flat/20/simpflat/109 [Double];
        write flat/16/simpflat/100 = flat/20/simpflat/110;
        write flat/16/simpflat/101 = flat/20/simpflat/111;
        write flat/16/simpflat/102 = flat/20/simpflat/112;
      }
      else
      {
        write flat/16/simpflat/100 = flat/15/simpflat/98;
        write flat/16/simpflat/101 = 0.0@{Double};
        write flat/16/simpflat/102 = 0.0@{Double};
      }
      read flat/16/simpflat/113 = flat/16/simpflat/100 [Error];
      read flat/16/simpflat/114 = flat/16/simpflat/101 [Double];
      read flat/16/simpflat/115 = flat/16/simpflat/102 [Double];
      write flat/10/simpflat/65 = flat/16/simpflat/113;
      write flat/10/simpflat/66 = flat/16/simpflat/114;
      write flat/10/simpflat/67 = flat/16/simpflat/115;
    }
    else
    {
      write flat/10/simpflat/65 = s/reify/6/conv/12/aval/0/simpflat/59;
      write flat/10/simpflat/66 = 0.0@{Double};
      write flat/10/simpflat/67 = 0.0@{Double};
    }
    read flat/10/simpflat/116 = flat/10/simpflat/65 [Error];
    read flat/10/simpflat/117 = flat/10/simpflat/66 [Double];
    read flat/10/simpflat/118 = flat/10/simpflat/67 [Double];
    write flat/3/simpflat/62 = flat/10/simpflat/116;
    write flat/3/simpflat/63 = flat/10/simpflat/117;
    write flat/3/simpflat/64 = flat/10/simpflat/118;
  }
  else
  {
    init flat/6/simpflat/119@{Error} = ExceptNotAnError@{Error};
    init flat/6/simpflat/120@{Double} = 0.0@{Double};
    init flat/6/simpflat/121@{Double} = 0.0@{Double};
    if (eq#@{Error} (ExceptFold1NoValue@{Error}) s/reify/6/conv/12/aval/0/simpflat/59)
    {
      init flat/7/simpflat/122@{Error} = ExceptNotAnError@{Error};
      init flat/7/simpflat/123@{Double} = 0.0@{Double};
      init flat/7/simpflat/124@{Double} = 0.0@{Double};
      if (eq#@{Error} conv/11/aval/1/simpflat/53 (ExceptNotAnError@{Error}))
      {
        write flat/7/simpflat/122 = ExceptNotAnError@{Error};
        write flat/7/simpflat/123 = conv/11/aval/1/simpflat/54;
        write flat/7/simpflat/124 = 1.0@{Double};
      }
      else
      {
        write flat/7/simpflat/122 = conv/11/aval/1/simpflat/53;
        write flat/7/simpflat/123 = 0.0@{Double};
        write flat/7/simpflat/124 = 0.0@{Double};
      }
      read flat/7/simpflat/125 = flat/7/simpflat/122 [Error];
      read flat/7/simpflat/126 = flat/7/simpflat/123 [Double];
      read flat/7/simpflat/127 = flat/7/simpflat/124 [Double];
      write flat/6/simpflat/119 = flat/7/simpflat/125;
      write flat/6/simpflat/120 = flat/7/simpflat/126;
      write flat/6/simpflat/121 = flat/7/simpflat/127;
    }
    else
    {
      write flat/6/simpflat/119 = s/reify/6/conv/12/aval/0/simpflat/59;
      write flat/6/simpflat/120 = 0.0@{Double};
      write flat/6/simpflat/121 = 0.0@{Double};
    }
    read flat/6/simpflat/128 = flat/6/simpflat/119 [Error];
    read flat/6/simpflat/129 = flat/6/simpflat/120 [Double];
    read flat/6/simpflat/130 = flat/6/simpflat/121 [Double];
    write flat/3/simpflat/62 = flat/6/simpflat/128;
    write flat/3/simpflat/63 = flat/6/simpflat/129;
    write flat/3/simpflat/64 = flat/6/simpflat/130;
  }
  read flat/3/simpflat/131 = flat/3/simpflat/62 [Error];
  read flat/3/simpflat/132 = flat/3/simpflat/63 [Double];
  read flat/3/simpflat/133 = flat/3/simpflat/64 [Double];
  write acc/s/reify/6/conv/12/simpflat/28 = flat/3/simpflat/131;
  write acc/s/reify/6/conv/12/simpflat/29 = flat/3/simpflat/132;
  write acc/s/reify/6/conv/12/simpflat/30 = flat/3/simpflat/133;
  init flat/36/simpflat/134@{Error} = ExceptNotAnError@{Error};
  init flat/36/simpflat/135@{String} = ""@{String};
  if (eq#@{Error} conv/0/simpflat/307 (ExceptNotAnError@{Error}))
  {
    write flat/36/simpflat/134 = ExceptNotAnError@{Error};
    write flat/36/simpflat/135 = conv/0/simpflat/308;
  }
  else
  {
    write flat/36/simpflat/134 = conv/0/simpflat/307;
    write flat/36/simpflat/135 = ""@{String};
  }
  read flat/36/simpflat/136 = flat/36/simpflat/134 [Error];
  read flat/36/simpflat/137 = flat/36/simpflat/135 [String];
  init flat/37/simpflat/138@{Error} = ExceptNotAnError@{Error};
  init flat/37/simpflat/139@{Bool} = False@{Bool};
  if (eq#@{Error} flat/36/simpflat/136 (ExceptNotAnError@{Error}))
  {
    write flat/37/simpflat/138 = ExceptNotAnError@{Error};
    write flat/37/simpflat/139 = eq#@{String} flat/36/simpflat/137 ("torso"@{String});
  }
  else
  {
    write flat/37/simpflat/138 = flat/36/simpflat/136;
    write flat/37/simpflat/139 = False@{Bool};
  }
  read flat/37/simpflat/140 = flat/37/simpflat/138 [Error];
  read flat/37/simpflat/141 = flat/37/simpflat/139 [Bool];
  init flat/38@{Bool} = False@{Bool};
  if (eq#@{Error} flat/37/simpflat/140 (ExceptNotAnError@{Error}))
  {
    write flat/38 = flat/37/simpflat/141;
  }
  else
  {
    write flat/38 = True@{Bool};
  }
  read flat/38 = flat/38 [Bool];
  if (flat/38)
  {
    init flat/39/simpflat/142@{Error} = ExceptNotAnError@{Error};
    init flat/39/simpflat/143@{Int} = 0@{Int};
    if (eq#@{Error} conv/0/simpflat/307 (ExceptNotAnError@{Error}))
    {
      write flat/39/simpflat/142 = ExceptNotAnError@{Error};
      write flat/39/simpflat/143 = conv/0/simpflat/309;
    }
    else
    {
      write flat/39/simpflat/142 = conv/0/simpflat/307;
      write flat/39/simpflat/143 = 0@{Int};
    }
    read flat/39/simpflat/144 = flat/39/simpflat/142 [Error];
    read flat/39/simpflat/145 = flat/39/simpflat/143 [Int];
    init flat/40/simpflat/146@{Error} = ExceptNotAnError@{Error};
    init flat/40/simpflat/147@{Double} = 0.0@{Double};
    if (eq#@{Error} flat/39/simpflat/144 (ExceptNotAnError@{Error}))
    {
      write flat/40/simpflat/146 = ExceptNotAnError@{Error};
      write flat/40/simpflat/147 = doubleOfInt# flat/39/simpflat/145;
    }
    else
    {
      write flat/40/simpflat/146 = flat/39/simpflat/144;
      write flat/40/simpflat/147 = 0.0@{Double};
    }
    read flat/40/simpflat/148 = flat/40/simpflat/146 [Error];
    read flat/40/simpflat/149 = flat/40/simpflat/147 [Double];
    write acc/conv/76/simpflat/31 = flat/40/simpflat/148;
    write acc/conv/76/simpflat/32 = flat/40/simpflat/149;
    read conv/76/aval/3/simpflat/150 = acc/conv/76/simpflat/31 [Error];
    read conv/76/aval/3/simpflat/151 = acc/conv/76/simpflat/32 [Double];
    read a/conv/77/aval/2/simpflat/156 = acc/a/conv/77/simpflat/37 [Error];
    read a/conv/77/aval/2/simpflat/157 = acc/a/conv/77/simpflat/38 [Double];
    read a/conv/77/aval/2/simpflat/158 = acc/a/conv/77/simpflat/39 [Double];
    read a/conv/77/aval/2/simpflat/159 = acc/a/conv/77/simpflat/40 [Double];
    init flat/41/simpflat/160@{Error} = ExceptNotAnError@{Error};
    init flat/41/simpflat/161@{Double} = 0.0@{Double};
    init flat/41/simpflat/162@{Double} = 0.0@{Double};
    init flat/41/simpflat/163@{Double} = 0.0@{Double};
    if (eq#@{Error} a/conv/77/aval/2/simpflat/156 (ExceptNotAnError@{Error}))
    {
      let conv/84 = add#@{Double} a/conv/77/aval/2/simpflat/157 (1.0@{Double});
      init flat/44/simpflat/164@{Error} = ExceptNotAnError@{Error};
      init flat/44/simpflat/165@{Double} = 0.0@{Double};
      if (doubleIsValid# conv/84)
      {
        write flat/44/simpflat/164 = ExceptNotAnError@{Error};
        write flat/44/simpflat/165 = add#@{Double} a/conv/77/aval/2/simpflat/157 (1.0@{Double});
      }
      else
      {
        write flat/44/simpflat/164 = ExceptCannotCompute@{Error};
        write flat/44/simpflat/165 = 0.0@{Double};
      }
      read flat/44/simpflat/166 = flat/44/simpflat/164 [Error];
      read flat/44/simpflat/167 = flat/44/simpflat/165 [Double];
      init flat/45/simpflat/168@{Error} = ExceptNotAnError@{Error};
      init flat/45/simpflat/169@{Double} = 0.0@{Double};
      if (eq#@{Error} conv/76/aval/3/simpflat/150 (ExceptNotAnError@{Error}))
      {
        let conv/89 = sub#@{Double} conv/76/aval/3/simpflat/151 a/conv/77/aval/2/simpflat/158;
        init flat/89/simpflat/170@{Error} = ExceptNotAnError@{Error};
        init flat/89/simpflat/171@{Double} = 0.0@{Double};
        if (doubleIsValid# conv/89)
        {
          write flat/89/simpflat/170 = ExceptNotAnError@{Error};
          write flat/89/simpflat/171 = sub#@{Double} conv/76/aval/3/simpflat/151 a/conv/77/aval/2/simpflat/158;
        }
        else
        {
          write flat/89/simpflat/170 = ExceptCannotCompute@{Error};
          write flat/89/simpflat/171 = 0.0@{Double};
        }
        read flat/89/simpflat/172 = flat/89/simpflat/170 [Error];
        read flat/89/simpflat/173 = flat/89/simpflat/171 [Double];
        write flat/45/simpflat/168 = flat/89/simpflat/172;
        write flat/45/simpflat/169 = flat/89/simpflat/173;
      }
      else
      {
        write flat/45/simpflat/168 = conv/76/aval/3/simpflat/150;
        write flat/45/simpflat/169 = 0.0@{Double};
      }
      read flat/45/simpflat/174 = flat/45/simpflat/168 [Error];
      read flat/45/simpflat/175 = flat/45/simpflat/169 [Double];
      init flat/46/simpflat/176@{Error} = ExceptNotAnError@{Error};
      init flat/46/simpflat/177@{Double} = 0.0@{Double};
      if (eq#@{Error} flat/45/simpflat/174 (ExceptNotAnError@{Error}))
      {
        init flat/83/simpflat/178@{Error} = ExceptNotAnError@{Error};
        init flat/83/simpflat/179@{Double} = 0.0@{Double};
        if (eq#@{Error} flat/44/simpflat/166 (ExceptNotAnError@{Error}))
        {
          let conv/97 = div# flat/45/simpflat/175 flat/44/simpflat/167;
          init flat/86/simpflat/180@{Error} = ExceptNotAnError@{Error};
          init flat/86/simpflat/181@{Double} = 0.0@{Double};
          if (doubleIsValid# conv/97)
          {
            write flat/86/simpflat/180 = ExceptNotAnError@{Error};
            write flat/86/simpflat/181 = div# flat/45/simpflat/175 flat/44/simpflat/167;
          }
          else
          {
            write flat/86/simpflat/180 = ExceptCannotCompute@{Error};
            write flat/86/simpflat/181 = 0.0@{Double};
          }
          read flat/86/simpflat/182 = flat/86/simpflat/180 [Error];
          read flat/86/simpflat/183 = flat/86/simpflat/181 [Double];
          write flat/83/simpflat/178 = flat/86/simpflat/182;
          write flat/83/simpflat/179 = flat/86/simpflat/183;
        }
        else
        {
          write flat/83/simpflat/178 = flat/44/simpflat/166;
          write flat/83/simpflat/179 = 0.0@{Double};
        }
        read flat/83/simpflat/184 = flat/83/simpflat/178 [Error];
        read flat/83/simpflat/185 = flat/83/simpflat/179 [Double];
        write flat/46/simpflat/176 = flat/83/simpflat/184;
        write flat/46/simpflat/177 = flat/83/simpflat/185;
      }
      else
      {
        write flat/46/simpflat/176 = flat/45/simpflat/174;
        write flat/46/simpflat/177 = 0.0@{Double};
      }
      read flat/46/simpflat/186 = flat/46/simpflat/176 [Error];
      read flat/46/simpflat/187 = flat/46/simpflat/177 [Double];
      init flat/47/simpflat/188@{Error} = ExceptNotAnError@{Error};
      init flat/47/simpflat/189@{Double} = 0.0@{Double};
      if (eq#@{Error} flat/46/simpflat/186 (ExceptNotAnError@{Error}))
      {
        let conv/103 = add#@{Double} a/conv/77/aval/2/simpflat/158 flat/46/simpflat/187;
        init flat/80/simpflat/190@{Error} = ExceptNotAnError@{Error};
        init flat/80/simpflat/191@{Double} = 0.0@{Double};
        if (doubleIsValid# conv/103)
        {
          write flat/80/simpflat/190 = ExceptNotAnError@{Error};
          write flat/80/simpflat/191 = add#@{Double} a/conv/77/aval/2/simpflat/158 flat/46/simpflat/187;
        }
        else
        {
          write flat/80/simpflat/190 = ExceptCannotCompute@{Error};
          write flat/80/simpflat/191 = 0.0@{Double};
        }
        read flat/80/simpflat/192 = flat/80/simpflat/190 [Error];
        read flat/80/simpflat/193 = flat/80/simpflat/191 [Double];
        write flat/47/simpflat/188 = flat/80/simpflat/192;
        write flat/47/simpflat/189 = flat/80/simpflat/193;
      }
      else
      {
        write flat/47/simpflat/188 = flat/46/simpflat/186;
        write flat/47/simpflat/189 = 0.0@{Double};
      }
      read flat/47/simpflat/194 = flat/47/simpflat/188 [Error];
      read flat/47/simpflat/195 = flat/47/simpflat/189 [Double];
      init flat/48/simpflat/196@{Error} = ExceptNotAnError@{Error};
      init flat/48/simpflat/197@{Double} = 0.0@{Double};
      if (eq#@{Error} flat/45/simpflat/174 (ExceptNotAnError@{Error}))
      {
        init flat/67/simpflat/198@{Error} = ExceptNotAnError@{Error};
        init flat/67/simpflat/199@{Double} = 0.0@{Double};
        if (eq#@{Error} conv/76/aval/3/simpflat/150 (ExceptNotAnError@{Error}))
        {
          init flat/74/simpflat/200@{Error} = ExceptNotAnError@{Error};
          init flat/74/simpflat/201@{Double} = 0.0@{Double};
          if (eq#@{Error} flat/47/simpflat/194 (ExceptNotAnError@{Error}))
          {
            let conv/113 = sub#@{Double} conv/76/aval/3/simpflat/151 flat/47/simpflat/195;
            init flat/77/simpflat/202@{Error} = ExceptNotAnError@{Error};
            init flat/77/simpflat/203@{Double} = 0.0@{Double};
            if (doubleIsValid# conv/113)
            {
              write flat/77/simpflat/202 = ExceptNotAnError@{Error};
              write flat/77/simpflat/203 = sub#@{Double} conv/76/aval/3/simpflat/151 flat/47/simpflat/195;
            }
            else
            {
              write flat/77/simpflat/202 = ExceptCannotCompute@{Error};
              write flat/77/simpflat/203 = 0.0@{Double};
            }
            read flat/77/simpflat/204 = flat/77/simpflat/202 [Error];
            read flat/77/simpflat/205 = flat/77/simpflat/203 [Double];
            write flat/74/simpflat/200 = flat/77/simpflat/204;
            write flat/74/simpflat/201 = flat/77/simpflat/205;
          }
          else
          {
            write flat/74/simpflat/200 = flat/47/simpflat/194;
            write flat/74/simpflat/201 = 0.0@{Double};
          }
          read flat/74/simpflat/206 = flat/74/simpflat/200 [Error];
          read flat/74/simpflat/207 = flat/74/simpflat/201 [Double];
          write flat/67/simpflat/198 = flat/74/simpflat/206;
          write flat/67/simpflat/199 = flat/74/simpflat/207;
        }
        else
        {
          write flat/67/simpflat/198 = conv/76/aval/3/simpflat/150;
          write flat/67/simpflat/199 = 0.0@{Double};
        }
        read flat/67/simpflat/208 = flat/67/simpflat/198 [Error];
        read flat/67/simpflat/209 = flat/67/simpflat/199 [Double];
        init flat/68/simpflat/210@{Error} = ExceptNotAnError@{Error};
        init flat/68/simpflat/211@{Double} = 0.0@{Double};
        if (eq#@{Error} flat/67/simpflat/208 (ExceptNotAnError@{Error}))
        {
          let conv/119 = mul#@{Double} flat/45/simpflat/175 flat/67/simpflat/209;
          init flat/71/simpflat/212@{Error} = ExceptNotAnError@{Error};
          init flat/71/simpflat/213@{Double} = 0.0@{Double};
          if (doubleIsValid# conv/119)
          {
            write flat/71/simpflat/212 = ExceptNotAnError@{Error};
            write flat/71/simpflat/213 = mul#@{Double} flat/45/simpflat/175 flat/67/simpflat/209;
          }
          else
          {
            write flat/71/simpflat/212 = ExceptCannotCompute@{Error};
            write flat/71/simpflat/213 = 0.0@{Double};
          }
          read flat/71/simpflat/214 = flat/71/simpflat/212 [Error];
          read flat/71/simpflat/215 = flat/71/simpflat/213 [Double];
          write flat/68/simpflat/210 = flat/71/simpflat/214;
          write flat/68/simpflat/211 = flat/71/simpflat/215;
        }
        else
        {
          write flat/68/simpflat/210 = flat/67/simpflat/208;
          write flat/68/simpflat/211 = 0.0@{Double};
        }
        read flat/68/simpflat/216 = flat/68/simpflat/210 [Error];
        read flat/68/simpflat/217 = flat/68/simpflat/211 [Double];
        write flat/48/simpflat/196 = flat/68/simpflat/216;
        write flat/48/simpflat/197 = flat/68/simpflat/217;
      }
      else
      {
        write flat/48/simpflat/196 = flat/45/simpflat/174;
        write flat/48/simpflat/197 = 0.0@{Double};
      }
      read flat/48/simpflat/218 = flat/48/simpflat/196 [Error];
      read flat/48/simpflat/219 = flat/48/simpflat/197 [Double];
      init flat/49/simpflat/220@{Error} = ExceptNotAnError@{Error};
      init flat/49/simpflat/221@{Double} = 0.0@{Double};
      if (eq#@{Error} flat/48/simpflat/218 (ExceptNotAnError@{Error}))
      {
        let conv/125 = add#@{Double} a/conv/77/aval/2/simpflat/159 flat/48/simpflat/219;
        init flat/64/simpflat/222@{Error} = ExceptNotAnError@{Error};
        init flat/64/simpflat/223@{Double} = 0.0@{Double};
        if (doubleIsValid# conv/125)
        {
          write flat/64/simpflat/222 = ExceptNotAnError@{Error};
          write flat/64/simpflat/223 = add#@{Double} a/conv/77/aval/2/simpflat/159 flat/48/simpflat/219;
        }
        else
        {
          write flat/64/simpflat/222 = ExceptCannotCompute@{Error};
          write flat/64/simpflat/223 = 0.0@{Double};
        }
        read flat/64/simpflat/224 = flat/64/simpflat/222 [Error];
        read flat/64/simpflat/225 = flat/64/simpflat/223 [Double];
        write flat/49/simpflat/220 = flat/64/simpflat/224;
        write flat/49/simpflat/221 = flat/64/simpflat/225;
      }
      else
      {
        write flat/49/simpflat/220 = flat/48/simpflat/218;
        write flat/49/simpflat/221 = 0.0@{Double};
      }
      read flat/49/simpflat/226 = flat/49/simpflat/220 [Error];
      read flat/49/simpflat/227 = flat/49/simpflat/221 [Double];
      init flat/50/simpflat/228@{Error} = ExceptNotAnError@{Error};
      init flat/50/simpflat/229@{Double} = 0.0@{Double};
      init flat/50/simpflat/230@{Double} = 0.0@{Double};
      if (eq#@{Error} flat/44/simpflat/166 (ExceptNotAnError@{Error}))
      {
        init flat/59/simpflat/231@{Error} = ExceptNotAnError@{Error};
        init flat/59/simpflat/232@{Double} = 0.0@{Double};
        init flat/59/simpflat/233@{Double} = 0.0@{Double};
        if (eq#@{Error} flat/47/simpflat/194 (ExceptNotAnError@{Error}))
        {
          write flat/59/simpflat/231 = ExceptNotAnError@{Error};
          write flat/59/simpflat/232 = flat/44/simpflat/167;
          write flat/59/simpflat/233 = flat/47/simpflat/195;
        }
        else
        {
          write flat/59/simpflat/231 = flat/47/simpflat/194;
          write flat/59/simpflat/232 = 0.0@{Double};
          write flat/59/simpflat/233 = 0.0@{Double};
        }
        read flat/59/simpflat/234 = flat/59/simpflat/231 [Error];
        read flat/59/simpflat/235 = flat/59/simpflat/232 [Double];
        read flat/59/simpflat/236 = flat/59/simpflat/233 [Double];
        write flat/50/simpflat/228 = flat/59/simpflat/234;
        write flat/50/simpflat/229 = flat/59/simpflat/235;
        write flat/50/simpflat/230 = flat/59/simpflat/236;
      }
      else
      {
        write flat/50/simpflat/228 = flat/44/simpflat/166;
        write flat/50/simpflat/229 = 0.0@{Double};
        write flat/50/simpflat/230 = 0.0@{Double};
      }
      read flat/50/simpflat/237 = flat/50/simpflat/228 [Error];
      read flat/50/simpflat/238 = flat/50/simpflat/229 [Double];
      read flat/50/simpflat/239 = flat/50/simpflat/230 [Double];
      init flat/51/simpflat/240@{Error} = ExceptNotAnError@{Error};
      init flat/51/simpflat/241@{Double} = 0.0@{Double};
      init flat/51/simpflat/242@{Double} = 0.0@{Double};
      init flat/51/simpflat/243@{Double} = 0.0@{Double};
      if (eq#@{Error} flat/50/simpflat/237 (ExceptNotAnError@{Error}))
      {
        init flat/54/simpflat/244@{Error} = ExceptNotAnError@{Error};
        init flat/54/simpflat/245@{Double} = 0.0@{Double};
        init flat/54/simpflat/246@{Double} = 0.0@{Double};
        init flat/54/simpflat/247@{Double} = 0.0@{Double};
        if (eq#@{Error} flat/49/simpflat/226 (ExceptNotAnError@{Error}))
        {
          write flat/54/simpflat/244 = ExceptNotAnError@{Error};
          write flat/54/simpflat/245 = flat/50/simpflat/238;
          write flat/54/simpflat/246 = flat/50/simpflat/239;
          write flat/54/simpflat/247 = flat/49/simpflat/227;
        }
        else
        {
          write flat/54/simpflat/244 = flat/49/simpflat/226;
          write flat/54/simpflat/245 = 0.0@{Double};
          write flat/54/simpflat/246 = 0.0@{Double};
          write flat/54/simpflat/247 = 0.0@{Double};
        }
        read flat/54/simpflat/248 = flat/54/simpflat/244 [Error];
        read flat/54/simpflat/249 = flat/54/simpflat/245 [Double];
        read flat/54/simpflat/250 = flat/54/simpflat/246 [Double];
        read flat/54/simpflat/251 = flat/54/simpflat/247 [Double];
        write flat/51/simpflat/240 = flat/54/simpflat/248;
        write flat/51/simpflat/241 = flat/54/simpflat/249;
        write flat/51/simpflat/242 = flat/54/simpflat/250;
        write flat/51/simpflat/243 = flat/54/simpflat/251;
      }
      else
      {
        write flat/51/simpflat/240 = flat/50/simpflat/237;
        write flat/51/simpflat/241 = 0.0@{Double};
        write flat/51/simpflat/242 = 0.0@{Double};
        write flat/51/simpflat/243 = 0.0@{Double};
      }
      read flat/51/simpflat/252 = flat/51/simpflat/240 [Error];
      read flat/51/simpflat/253 = flat/51/simpflat/241 [Double];
      read flat/51/simpflat/254 = flat/51/simpflat/242 [Double];
      read flat/51/simpflat/255 = flat/51/simpflat/243 [Double];
      write flat/41/simpflat/160 = flat/51/simpflat/252;
      write flat/41/simpflat/161 = flat/51/simpflat/253;
      write flat/41/simpflat/162 = flat/51/simpflat/254;
      write flat/41/simpflat/163 = flat/51/simpflat/255;
    }
    else
    {
      write flat/41/simpflat/160 = a/conv/77/aval/2/simpflat/156;
      write flat/41/simpflat/161 = 0.0@{Double};
      write flat/41/simpflat/162 = 0.0@{Double};
      write flat/41/simpflat/163 = 0.0@{Double};
    }
    read flat/41/simpflat/256 = flat/41/simpflat/160 [Error];
    read flat/41/simpflat/257 = flat/41/simpflat/161 [Double];
    read flat/41/simpflat/258 = flat/41/simpflat/162 [Double];
    read flat/41/simpflat/259 = flat/41/simpflat/163 [Double];
    write acc/a/conv/77/simpflat/37 = flat/41/simpflat/256;
    write acc/a/conv/77/simpflat/38 = flat/41/simpflat/257;
    write acc/a/conv/77/simpflat/39 = flat/41/simpflat/258;
    write acc/a/conv/77/simpflat/40 = flat/41/simpflat/259;
  }
}
save_resumable@{Error} acc/a/conv/77/simpflat/37;
save_resumable@{Double} acc/a/conv/77/simpflat/38;
save_resumable@{Double} acc/a/conv/77/simpflat/39;
save_resumable@{Double} acc/a/conv/77/simpflat/40;
save_resumable@{Error} acc/conv/76/simpflat/31;
save_resumable@{Double} acc/conv/76/simpflat/32;
save_resumable@{Error} acc/s/reify/6/conv/12/simpflat/28;
save_resumable@{Double} acc/s/reify/6/conv/12/simpflat/29;
save_resumable@{Double} acc/s/reify/6/conv/12/simpflat/30;
save_resumable@{Error} acc/conv/11/simpflat/22;
save_resumable@{Double} acc/conv/11/simpflat/23;
read a/conv/77/simpflat/260 = acc/a/conv/77/simpflat/37 [Error];
read a/conv/77/simpflat/261 = acc/a/conv/77/simpflat/38 [Double];
read a/conv/77/simpflat/263 = acc/a/conv/77/simpflat/40 [Double];
read s/reify/6/conv/12/simpflat/264 = acc/s/reify/6/conv/12/simpflat/28 [Error];
read s/reify/6/conv/12/simpflat/265 = acc/s/reify/6/conv/12/simpflat/29 [Double];
init flat/110/simpflat/267@{Error} = ExceptNotAnError@{Error};
init flat/110/simpflat/268@{Double} = 0.0@{Double};
if (eq#@{Error} s/reify/6/conv/12/simpflat/264 (ExceptNotAnError@{Error}))
{
  write flat/110/simpflat/267 = ExceptNotAnError@{Error};
  write flat/110/simpflat/268 = s/reify/6/conv/12/simpflat/265;
}
else
{
  write flat/110/simpflat/267 = s/reify/6/conv/12/simpflat/264;
  write flat/110/simpflat/268 = 0.0@{Double};
}
read flat/110/simpflat/269 = flat/110/simpflat/267 [Error];
read flat/110/simpflat/270 = flat/110/simpflat/268 [Double];
init flat/111/simpflat/271@{Error} = ExceptNotAnError@{Error};
init flat/111/simpflat/272@{Double} = 0.0@{Double};
if (eq#@{Error} flat/110/simpflat/269 (ExceptNotAnError@{Error}))
{
  init flat/114/simpflat/273@{Error} = ExceptNotAnError@{Error};
  init flat/114/simpflat/274@{Double} = 0.0@{Double};
  if (eq#@{Error} a/conv/77/simpflat/260 (ExceptNotAnError@{Error}))
  {
    let conv/152 = sub#@{Double} a/conv/77/simpflat/261 (1.0@{Double});
    init flat/125/simpflat/275@{Error} = ExceptNotAnError@{Error};
    init flat/125/simpflat/276@{Double} = 0.0@{Double};
    if (doubleIsValid# conv/152)
    {
      write flat/125/simpflat/275 = ExceptNotAnError@{Error};
      write flat/125/simpflat/276 = sub#@{Double} a/conv/77/simpflat/261 (1.0@{Double});
    }
    else
    {
      write flat/125/simpflat/275 = ExceptCannotCompute@{Error};
      write flat/125/simpflat/276 = 0.0@{Double};
    }
    read flat/125/simpflat/277 = flat/125/simpflat/275 [Error];
    read flat/125/simpflat/278 = flat/125/simpflat/276 [Double];
    init flat/126/simpflat/279@{Error} = ExceptNotAnError@{Error};
    init flat/126/simpflat/280@{Double} = 0.0@{Double};
    if (eq#@{Error} flat/125/simpflat/277 (ExceptNotAnError@{Error}))
    {
      let conv/158 = div# a/conv/77/simpflat/263 flat/125/simpflat/278;
      init flat/129/simpflat/281@{Error} = ExceptNotAnError@{Error};
      init flat/129/simpflat/282@{Double} = 0.0@{Double};
      if (doubleIsValid# conv/158)
      {
        write flat/129/simpflat/281 = ExceptNotAnError@{Error};
        write flat/129/simpflat/282 = div# a/conv/77/simpflat/263 flat/125/simpflat/278;
      }
      else
      {
        write flat/129/simpflat/281 = ExceptCannotCompute@{Error};
        write flat/129/simpflat/282 = 0.0@{Double};
      }
      read flat/129/simpflat/283 = flat/129/simpflat/281 [Error];
      read flat/129/simpflat/284 = flat/129/simpflat/282 [Double];
      write flat/126/simpflat/279 = flat/129/simpflat/283;
      write flat/126/simpflat/280 = flat/129/simpflat/284;
    }
    else
    {
      write flat/126/simpflat/279 = flat/125/simpflat/277;
      write flat/126/simpflat/280 = 0.0@{Double};
    }
    read flat/126/simpflat/285 = flat/126/simpflat/279 [Error];
    read flat/126/simpflat/286 = flat/126/simpflat/280 [Double];
    write flat/114/simpflat/273 = flat/126/simpflat/285;
    write flat/114/simpflat/274 = flat/126/simpflat/286;
  }
  else
  {
    write flat/114/simpflat/273 = a/conv/77/simpflat/260;
    write flat/114/simpflat/274 = 0.0@{Double};
  }
  read flat/114/simpflat/287 = flat/114/simpflat/273 [Error];
  read flat/114/simpflat/288 = flat/114/simpflat/274 [Double];
  init flat/115/simpflat/289@{Error} = ExceptNotAnError@{Error};
  init flat/115/simpflat/290@{Double} = 0.0@{Double};
  if (eq#@{Error} flat/114/simpflat/287 (ExceptNotAnError@{Error}))
  {
    let conv/172 = sqrt# flat/114/simpflat/288;
    init flat/122/simpflat/291@{Error} = ExceptNotAnError@{Error};
    init flat/122/simpflat/292@{Double} = 0.0@{Double};
    if (doubleIsValid# conv/172)
    {
      write flat/122/simpflat/291 = ExceptNotAnError@{Error};
      write flat/122/simpflat/292 = sqrt# flat/114/simpflat/288;
    }
    else
    {
      write flat/122/simpflat/291 = ExceptCannotCompute@{Error};
      write flat/122/simpflat/292 = 0.0@{Double};
    }
    read flat/122/simpflat/293 = flat/122/simpflat/291 [Error];
    read flat/122/simpflat/294 = flat/122/simpflat/292 [Double];
    write flat/115/simpflat/289 = flat/122/simpflat/293;
    write flat/115/simpflat/290 = flat/122/simpflat/294;
  }
  else
  {
    write flat/115/simpflat/289 = flat/114/simpflat/287;
    write flat/115/simpflat/290 = 0.0@{Double};
  }
  read flat/115/simpflat/295 = flat/115/simpflat/289 [Error];
  read flat/115/simpflat/296 = flat/115/simpflat/290 [Double];
  init flat/116/simpflat/297@{Error} = ExceptNotAnError@{Error};
  init flat/116/simpflat/298@{Double} = 0.0@{Double};
  if (eq#@{Error} flat/115/simpflat/295 (ExceptNotAnError@{Error}))
  {
    let conv/180 = mul#@{Double} flat/110/simpflat/270 flat/115/simpflat/296;
    init flat/119/simpflat/299@{Error} = ExceptNotAnError@{Error};
    init flat/119/simpflat/300@{Double} = 0.0@{Double};
    if (doubleIsValid# conv/180)
    {
      write flat/119/simpflat/299 = ExceptNotAnError@{Error};
      write flat/119/simpflat/300 = mul#@{Double} flat/110/simpflat/270 flat/115/simpflat/296;
    }
    else
    {
      write flat/119/simpflat/299 = ExceptCannotCompute@{Error};
      write flat/119/simpflat/300 = 0.0@{Double};
    }
    read flat/119/simpflat/301 = flat/119/simpflat/299 [Error];
    read flat/119/simpflat/302 = flat/119/simpflat/300 [Double];
    write flat/116/simpflat/297 = flat/119/simpflat/301;
    write flat/116/simpflat/298 = flat/119/simpflat/302;
  }
  else
  {
    write flat/116/simpflat/297 = flat/115/simpflat/295;
    write flat/116/simpflat/298 = 0.0@{Double};
  }
  read flat/116/simpflat/303 = flat/116/simpflat/297 [Error];
  read flat/116/simpflat/304 = flat/116/simpflat/298 [Double];
  write flat/111/simpflat/271 = flat/116/simpflat/303;
  write flat/111/simpflat/272 = flat/116/simpflat/304;
}
else
{
  write flat/111/simpflat/271 = flat/110/simpflat/269;
  write flat/111/simpflat/272 = 0.0@{Double};
}
read flat/111/simpflat/305 = flat/111/simpflat/271 [Error];
read flat/111/simpflat/306 = flat/111/simpflat/272 [Double];
output@{(Sum Error Double)} repl:output (flat/111/simpflat/305@{Error}, flat/111/simpflat/306@{Double});

- C:
#line 1 "cluster state #0 - repl:input"

typedef struct {
    itime_t          convzs3;
    iint_t           new_count;
    ierror_t         *new_convzs0zssimpflatzs307;
    istring_t        *new_convzs0zssimpflatzs308;
    iint_t           *new_convzs0zssimpflatzs309;
    itime_t          *new_convzs0zssimpflatzs310;
} input_replZCinput_t;

typedef struct {
    /* runtime */
    anemone_mempool_t *mempool;
    iint_t           max_map_size;

    /* inputs */
    input_replZCinput_t input;

  /* kernel 0/0 */
    /* outputs */
    ierror_t         replZCoutputzsixzs0;
    idouble_t        replZCoutputzsixzs1;

    /* resumables: values */
    idouble_t        res_0_0_acczsconvzs11zssimpflatzs23;
    ierror_t         res_0_0_acczsconvzs11zssimpflatzs22;
    idouble_t        res_0_0_acczsszsreifyzs6zsconvzs12zssimpflatzs30;
    idouble_t        res_0_0_acczsszsreifyzs6zsconvzs12zssimpflatzs29;
    ierror_t         res_0_0_acczsszsreifyzs6zsconvzs12zssimpflatzs28;
    ierror_t         res_0_0_acczsazsconvzs77zssimpflatzs37;
    idouble_t        res_0_0_acczsazsconvzs77zssimpflatzs39;
    idouble_t        res_0_0_acczsazsconvzs77zssimpflatzs38;
    ierror_t         res_0_0_acczsconvzs76zssimpflatzs31;
    idouble_t        res_0_0_acczsconvzs76zssimpflatzs32;
    idouble_t        res_0_0_acczsazsconvzs77zssimpflatzs40;

    /* resumables: has flags */
    ibool_t          has_flags_start_0_0;
    ibool_t          has_0_0_acczsconvzs11zssimpflatzs23;
    ibool_t          has_0_0_acczsconvzs11zssimpflatzs22;
    ibool_t          has_0_0_acczsszsreifyzs6zsconvzs12zssimpflatzs30;
    ibool_t          has_0_0_acczsszsreifyzs6zsconvzs12zssimpflatzs29;
    ibool_t          has_0_0_acczsszsreifyzs6zsconvzs12zssimpflatzs28;
    ibool_t          has_0_0_acczsazsconvzs77zssimpflatzs37;
    ibool_t          has_0_0_acczsazsconvzs77zssimpflatzs39;
    ibool_t          has_0_0_acczsazsconvzs77zssimpflatzs38;
    ibool_t          has_0_0_acczsconvzs76zssimpflatzs31;
    ibool_t          has_0_0_acczsconvzs76zssimpflatzs32;
    ibool_t          has_0_0_acczsazsconvzs77zssimpflatzs40;
    ibool_t          has_flags_end_0_0;


} icluster_0_t;

iint_t size_of_icluster_0 ()
{
    return sizeof (icluster_0_t);
}

#line 1 "kernel function #0 - repl:input icluster_0_kernel_0"
void icluster_0_kernel_0(icluster_0_t *s)
{
    idouble_t        flatzs20zssimpflatzs109;
    ierror_t         flatzs20zssimpflatzs107;
    idouble_t        flatzs20zssimpflatzs108;
    idouble_t        flatzs20zssimpflatzs112;
    idouble_t        flatzs20zssimpflatzs111;
    ierror_t         flatzs20zssimpflatzs110;
    iint_t           flatzs39zssimpflatzs143;
    ierror_t         flatzs39zssimpflatzs142;
    ierror_t         flatzs39zssimpflatzs144;
    iint_t           flatzs39zssimpflatzs145;
    ibool_t          flatzs37zssimpflatzs141;
    ierror_t         flatzs37zssimpflatzs140;
    ierror_t         flatzs37zssimpflatzs138;
    ibool_t          flatzs37zssimpflatzs139;
    istring_t        flatzs36zssimpflatzs137;
    ierror_t         flatzs36zssimpflatzs134;
    ierror_t         flatzs36zssimpflatzs136;
    istring_t        flatzs36zssimpflatzs135;
    idouble_t        flatzs14zssimpflatzs91;
    ierror_t         flatzs14zssimpflatzs90;
    idouble_t        flatzs15zssimpflatzs99;
    ierror_t         flatzs15zssimpflatzs98;
    idouble_t        flatzs15zssimpflatzs93;
    ierror_t         flatzs15zssimpflatzs92;
    idouble_t        acczsconvzs11zssimpflatzs23;
    ierror_t         acczsconvzs11zssimpflatzs22;
    idouble_t        flatzs13zssimpflatzs75;
    ierror_t         flatzs13zssimpflatzs74;
    idouble_t        flatzs14zssimpflatzs77;
    ierror_t         flatzs14zssimpflatzs76;
    ierror_t         flatzs6zssimpflatzs119;
    ierror_t         flatzs115zssimpflatzs289;
    idouble_t        flatzs114zssimpflatzs288;
    ierror_t         flatzs114zssimpflatzs287;
    ierror_t         flatzs3zssimpflatzs131;
    idouble_t        flatzs3zssimpflatzs133;
    idouble_t        flatzs3zssimpflatzs132;
    idouble_t        flatzs6zssimpflatzs130;
    idouble_t        flatzs115zssimpflatzs290;
    idouble_t        flatzs115zssimpflatzs296;
    ierror_t         flatzs115zssimpflatzs295;
    idouble_t        flatzs116zssimpflatzs298;
    ierror_t         flatzs116zssimpflatzs297;
    ierror_t         flatzs119zssimpflatzs299;
    ierror_t         szsreifyzs6zsconvzs12zsavalzs0zssimpflatzs59;
    idouble_t        flatzs28zssimpflatzs81;
    ierror_t         flatzs28zssimpflatzs80;
    idouble_t        flatzs29zssimpflatzs89;
    ierror_t         flatzs29zssimpflatzs88;
    idouble_t        flatzs29zssimpflatzs83;
    ierror_t         flatzs29zssimpflatzs82;
    idouble_t        szsreifyzs6zsconvzs12zsavalzs0zssimpflatzs61;
    idouble_t        szsreifyzs6zsconvzs12zsavalzs0zssimpflatzs60;
    ierror_t         flatzs25zssimpflatzs94;
    idouble_t        flatzs25zssimpflatzs95;
    ierror_t         flatzs25zssimpflatzs96;
    idouble_t        flatzs25zssimpflatzs97;
    ierror_t         flatzs28zssimpflatzs78;
    idouble_t        flatzs28zssimpflatzs79;
    idouble_t        flatzs16zssimpflatzs102;
    ierror_t         flatzs16zssimpflatzs100;
    idouble_t        flatzs16zssimpflatzs101;
    ierror_t         flatzs19zssimpflatzs103;
    ierror_t         flatzs19zssimpflatzs105;
    idouble_t        flatzs19zssimpflatzs104;
    idouble_t        flatzs19zssimpflatzs106;
    ierror_t         flatzs110zssimpflatzs269;
    idouble_t        flatzs110zssimpflatzs268;
    ierror_t         flatzs110zssimpflatzs267;
    idouble_t        flatzs10zssimpflatzs118;
    ierror_t         flatzs10zssimpflatzs116;
    idouble_t        flatzs10zssimpflatzs117;
    idouble_t        flatzs16zssimpflatzs115;
    ierror_t         flatzs16zssimpflatzs113;
    idouble_t        flatzs16zssimpflatzs114;
    ierror_t         flatzs114zssimpflatzs273;
    idouble_t        flatzs114zssimpflatzs274;
    idouble_t        flatzs110zssimpflatzs270;
    idouble_t        flatzs111zssimpflatzs272;
    ierror_t         flatzs111zssimpflatzs271;
    idouble_t        flatzs116zssimpflatzs304;
    ierror_t         flatzs116zssimpflatzs303;
    idouble_t        flatzs119zssimpflatzs300;
    idouble_t        flatzs119zssimpflatzs302;
    ierror_t         flatzs119zssimpflatzs301;
    idouble_t        flatzs111zssimpflatzs306;
    ierror_t         flatzs111zssimpflatzs305;
    ierror_t         flatzs32zssimpflatzs86;
    idouble_t        flatzs32zssimpflatzs87;
    ierror_t         flatzs32zssimpflatzs84;
    idouble_t        flatzs32zssimpflatzs85;
    idouble_t        flatzs7zssimpflatzs123;
    idouble_t        flatzs7zssimpflatzs124;
    ierror_t         flatzs7zssimpflatzs125;
    idouble_t        flatzs7zssimpflatzs126;
    idouble_t        flatzs7zssimpflatzs127;
    ierror_t         flatzs7zssimpflatzs122;
    idouble_t        flatzs6zssimpflatzs121;
    idouble_t        flatzs6zssimpflatzs120;
    idouble_t        flatzs6zssimpflatzs129;
    ierror_t         flatzs6zssimpflatzs128;
    idouble_t        flatzs35zssimpflatzs73;
    ierror_t         flatzs35zssimpflatzs72;
    idouble_t        flatzs35zssimpflatzs71;
    ierror_t         flatzs35zssimpflatzs70;
    ierror_t         flatzs48zssimpflatzs218;
    idouble_t        flatzs48zssimpflatzs219;
    idouble_t        acczsszsreifyzs6zsconvzs12zssimpflatzs30;
    idouble_t        flatzs54zssimpflatzs246;
    idouble_t        flatzs54zssimpflatzs247;
    ierror_t         flatzs54zssimpflatzs244;
    ierror_t         flatzs54zssimpflatzs248;
    idouble_t        flatzs54zssimpflatzs249;
    idouble_t        flatzs54zssimpflatzs245;
    idouble_t        flatzs51zssimpflatzs243;
    ierror_t         flatzs51zssimpflatzs240;
    idouble_t        flatzs51zssimpflatzs242;
    idouble_t        flatzs51zssimpflatzs241;
    idouble_t        acczsszsreifyzs6zsconvzs12zssimpflatzs29;
    ierror_t         acczsszsreifyzs6zsconvzs12zssimpflatzs28;
    idouble_t        flatzs49zssimpflatzs221;
    ierror_t         flatzs49zssimpflatzs220;
    idouble_t        flatzs49zssimpflatzs227;
    ierror_t         flatzs49zssimpflatzs226;
    idouble_t        flatzs54zssimpflatzs251;
    idouble_t        flatzs54zssimpflatzs250;
    ierror_t         flatzs51zssimpflatzs252;
    idouble_t        flatzs51zssimpflatzs254;
    idouble_t        flatzs51zssimpflatzs253;
    idouble_t        flatzs51zssimpflatzs255;
    ierror_t         flatzs89zssimpflatzs170;
    idouble_t        flatzs89zssimpflatzs171;
    ierror_t         flatzs89zssimpflatzs172;
    idouble_t        flatzs89zssimpflatzs173;
    ierror_t         flatzs83zssimpflatzs178;
    idouble_t        flatzs83zssimpflatzs179;
    ierror_t         flatzs47zssimpflatzs188;
    idouble_t        flatzs47zssimpflatzs189;
    ierror_t         flatzs46zssimpflatzs186;
    idouble_t        flatzs46zssimpflatzs187;
    idouble_t        azsconvzs77zsavalzs2zssimpflatzs158;
    idouble_t        azsconvzs77zsavalzs2zssimpflatzs159;
    ierror_t         azsconvzs77zsavalzs2zssimpflatzs156;
    idouble_t        azsconvzs77zsavalzs2zssimpflatzs157;
    ierror_t         convzs76zsavalzs3zssimpflatzs150;
    idouble_t        convzs76zsavalzs3zssimpflatzs151;
    ierror_t         flatzs50zssimpflatzs228;
    idouble_t        flatzs50zssimpflatzs229;
    idouble_t        flatzs59zssimpflatzs233;
    idouble_t        flatzs59zssimpflatzs232;
    ierror_t         flatzs59zssimpflatzs231;
    idouble_t        flatzs59zssimpflatzs236;
    idouble_t        flatzs59zssimpflatzs235;
    ierror_t         flatzs59zssimpflatzs234;
    idouble_t        flatzs50zssimpflatzs239;
    idouble_t        flatzs50zssimpflatzs238;
    idouble_t        flatzs50zssimpflatzs230;
    ierror_t         flatzs50zssimpflatzs237;
    idouble_t        flatzs41zssimpflatzs259;
    idouble_t        flatzs41zssimpflatzs257;
    idouble_t        flatzs41zssimpflatzs258;
    ierror_t         flatzs41zssimpflatzs256;
    idouble_t        flatzs47zssimpflatzs195;
    ierror_t         flatzs47zssimpflatzs194;
    idouble_t        flatzs48zssimpflatzs197;
    ierror_t         flatzs48zssimpflatzs196;
    ierror_t         azsconvzs77zssimpflatzs260;
    idouble_t        azsconvzs77zssimpflatzs261;
    idouble_t        azsconvzs77zssimpflatzs263;
    idouble_t        flatzs68zssimpflatzs217;
    ierror_t         flatzs68zssimpflatzs210;
    idouble_t        flatzs68zssimpflatzs211;
    ierror_t         flatzs68zssimpflatzs216;
    ierror_t         flatzs80zssimpflatzs192;
    idouble_t        flatzs80zssimpflatzs193;
    ierror_t         flatzs80zssimpflatzs190;
    idouble_t        flatzs80zssimpflatzs191;
    ierror_t         flatzs67zssimpflatzs208;
    idouble_t        flatzs67zssimpflatzs209;
    idouble_t        flatzs10zssimpflatzs66;
    idouble_t        flatzs10zssimpflatzs67;
    ierror_t         flatzs10zssimpflatzs65;
    ierror_t         flatzs13zssimpflatzs68;
    idouble_t        flatzs13zssimpflatzs69;
    ierror_t         flatzs125zssimpflatzs277;
    idouble_t        flatzs125zssimpflatzs276;
    idouble_t        flatzs125zssimpflatzs278;
    ierror_t         flatzs125zssimpflatzs275;
    ierror_t         flatzs126zssimpflatzs279;
    idouble_t        szsreifyzs6zsconvzs12zssimpflatzs265;
    ierror_t         szsreifyzs6zsconvzs12zssimpflatzs264;
    idouble_t        flatzs64zssimpflatzs225;
    ierror_t         flatzs64zssimpflatzs224;
    idouble_t        flatzs64zssimpflatzs223;
    ierror_t         flatzs64zssimpflatzs222;
    idouble_t        flatzs83zssimpflatzs185;
    ierror_t         flatzs83zssimpflatzs184;
    idouble_t        flatzs86zssimpflatzs181;
    ierror_t         flatzs86zssimpflatzs180;
    idouble_t        flatzs86zssimpflatzs183;
    ierror_t         flatzs86zssimpflatzs182;
    idouble_t        flatzs45zssimpflatzs175;
    ierror_t         flatzs45zssimpflatzs174;
    idouble_t        flatzs46zssimpflatzs177;
    ierror_t         flatzs46zssimpflatzs176;
    ierror_t         acczsazsconvzs77zssimpflatzs37;
    idouble_t        acczsazsconvzs77zssimpflatzs39;
    idouble_t        acczsazsconvzs77zssimpflatzs38;
    ierror_t         flatzs2zssimpflatzs49;
    ierror_t         flatzs0zssimpflatzs41;
    iint_t           flatzs0zssimpflatzs44;
    ierror_t         flatzs0zssimpflatzs43;
    iint_t           flatzs0zssimpflatzs42;
    ierror_t         flatzs1zssimpflatzs45;
    ierror_t         flatzs1zssimpflatzs47;
    idouble_t        flatzs1zssimpflatzs46;
    idouble_t        flatzs1zssimpflatzs48;
    ierror_t         flatzs129zssimpflatzs281;
    idouble_t        flatzs129zssimpflatzs284;
    idouble_t        flatzs129zssimpflatzs282;
    ierror_t         flatzs129zssimpflatzs283;
    idouble_t        flatzs126zssimpflatzs286;
    ierror_t         flatzs126zssimpflatzs285;
    idouble_t        flatzs126zssimpflatzs280;
    ierror_t         flatzs71zssimpflatzs214;
    idouble_t        flatzs71zssimpflatzs215;
    idouble_t        flatzs71zssimpflatzs213;
    ierror_t         flatzs71zssimpflatzs212;
    ierror_t         acczsconvzs76zssimpflatzs31;
    idouble_t        acczsconvzs76zssimpflatzs32;
    idouble_t        acczsazsconvzs77zssimpflatzs40;
    idouble_t        flatzs77zssimpflatzs205;
    ierror_t         flatzs77zssimpflatzs204;
    idouble_t        flatzs77zssimpflatzs203;
    ierror_t         flatzs77zssimpflatzs202;
    idouble_t        flatzs74zssimpflatzs201;
    ierror_t         flatzs74zssimpflatzs206;
    idouble_t        flatzs74zssimpflatzs207;
    ierror_t         flatzs74zssimpflatzs200;
    idouble_t        flatzs41zssimpflatzs162;
    idouble_t        flatzs41zssimpflatzs163;
    ierror_t         flatzs41zssimpflatzs160;
    idouble_t        flatzs41zssimpflatzs161;
    ierror_t         flatzs45zssimpflatzs168;
    idouble_t        flatzs45zssimpflatzs169;
    ierror_t         flatzs44zssimpflatzs164;
    idouble_t        flatzs44zssimpflatzs165;
    ierror_t         flatzs44zssimpflatzs166;
    idouble_t        flatzs44zssimpflatzs167;
    idouble_t        flatzs3zssimpflatzs63;
    ierror_t         flatzs3zssimpflatzs62;
    idouble_t        flatzs3zssimpflatzs64;
    idouble_t        flatzs2zssimpflatzs50;
    ierror_t         flatzs2zssimpflatzs51;
    idouble_t        flatzs2zssimpflatzs52;
    ierror_t         flatzs122zssimpflatzs293;
    ierror_t         flatzs122zssimpflatzs291;
    idouble_t        flatzs122zssimpflatzs292;
    idouble_t        flatzs122zssimpflatzs294;
    ibool_t          flatzs38;
    idouble_t        convzs11zsavalzs1zssimpflatzs54;
    ierror_t         convzs11zsavalzs1zssimpflatzs53;
    idouble_t        flatzs67zssimpflatzs199;
    ierror_t         flatzs67zssimpflatzs198;
    idouble_t        flatzs40zssimpflatzs149;
    ierror_t         flatzs40zssimpflatzs148;
    ierror_t         flatzs40zssimpflatzs146;
    idouble_t        flatzs40zssimpflatzs147;

    anemone_mempool_t *mempool                = s->mempool;
    itime_t          convzs3                  = s->input.convzs3;
    iint_t           convzs4                  = s->max_map_size;

    acczsconvzs11zssimpflatzs22               = ierror_not_an_error;                  /* init */
    acczsconvzs11zssimpflatzs23               = 0.0;                                  /* init */
    acczsszsreifyzs6zsconvzs12zssimpflatzs28  = ierror_fold1_no_value;                /* init */
    acczsszsreifyzs6zsconvzs12zssimpflatzs29  = 0.0;                                  /* init */
    acczsszsreifyzs6zsconvzs12zssimpflatzs30  = 0.0;                                  /* init */
    acczsconvzs76zssimpflatzs31               = ierror_not_an_error;                  /* init */
    acczsconvzs76zssimpflatzs32               = 0.0;                                  /* init */
    acczsazsconvzs77zssimpflatzs37            = ierror_not_an_error;                  /* init */
    acczsazsconvzs77zssimpflatzs38            = 0.0;                                  /* init */
    acczsazsconvzs77zssimpflatzs39            = 0.0;                                  /* init */
    acczsazsconvzs77zssimpflatzs40            = 0.0;                                  /* init */
    
    if (s->has_0_0_acczsazsconvzs77zssimpflatzs37) {
        acczsazsconvzs77zssimpflatzs37        = s->res_0_0_acczsazsconvzs77zssimpflatzs37; /* load */
    }
    
    if (s->has_0_0_acczsazsconvzs77zssimpflatzs38) {
        acczsazsconvzs77zssimpflatzs38        = s->res_0_0_acczsazsconvzs77zssimpflatzs38; /* load */
    }
    
    if (s->has_0_0_acczsazsconvzs77zssimpflatzs39) {
        acczsazsconvzs77zssimpflatzs39        = s->res_0_0_acczsazsconvzs77zssimpflatzs39; /* load */
    }
    
    if (s->has_0_0_acczsazsconvzs77zssimpflatzs40) {
        acczsazsconvzs77zssimpflatzs40        = s->res_0_0_acczsazsconvzs77zssimpflatzs40; /* load */
    }
    
    if (s->has_0_0_acczsconvzs76zssimpflatzs31) {
        acczsconvzs76zssimpflatzs31           = s->res_0_0_acczsconvzs76zssimpflatzs31; /* load */
    }
    
    if (s->has_0_0_acczsconvzs76zssimpflatzs32) {
        acczsconvzs76zssimpflatzs32           = s->res_0_0_acczsconvzs76zssimpflatzs32; /* load */
    }
    
    if (s->has_0_0_acczsszsreifyzs6zsconvzs12zssimpflatzs28) {
        acczsszsreifyzs6zsconvzs12zssimpflatzs28 = s->res_0_0_acczsszsreifyzs6zsconvzs12zssimpflatzs28; /* load */
    }
    
    if (s->has_0_0_acczsszsreifyzs6zsconvzs12zssimpflatzs29) {
        acczsszsreifyzs6zsconvzs12zssimpflatzs29 = s->res_0_0_acczsszsreifyzs6zsconvzs12zssimpflatzs29; /* load */
    }
    
    if (s->has_0_0_acczsszsreifyzs6zsconvzs12zssimpflatzs30) {
        acczsszsreifyzs6zsconvzs12zssimpflatzs30 = s->res_0_0_acczsszsreifyzs6zsconvzs12zssimpflatzs30; /* load */
    }
    
    if (s->has_0_0_acczsconvzs11zssimpflatzs22) {
        acczsconvzs11zssimpflatzs22           = s->res_0_0_acczsconvzs11zssimpflatzs22; /* load */
    }
    
    if (s->has_0_0_acczsconvzs11zssimpflatzs23) {
        acczsconvzs11zssimpflatzs23           = s->res_0_0_acczsconvzs11zssimpflatzs23; /* load */
    }
    
    const iint_t     new_count                = s->input.new_count;
    const ierror_t  *const new_convzs0zssimpflatzs307 = s->input.new_convzs0zssimpflatzs307;
    const istring_t *const new_convzs0zssimpflatzs308 = s->input.new_convzs0zssimpflatzs308;
    const iint_t    *const new_convzs0zssimpflatzs309 = s->input.new_convzs0zssimpflatzs309;
    const itime_t   *const new_convzs0zssimpflatzs310 = s->input.new_convzs0zssimpflatzs310;
    
    for (iint_t i = 0; i < new_count; i++) {
        ifactid_t        convzs1              = i;
        itime_t          convzs2              = new_convzs0zssimpflatzs310[i];
        ierror_t         convzs0zssimpflatzs307 = new_convzs0zssimpflatzs307[i];
        istring_t        convzs0zssimpflatzs308 = new_convzs0zssimpflatzs308[i];
        iint_t           convzs0zssimpflatzs309 = new_convzs0zssimpflatzs309[i];
        itime_t          convzs0zssimpflatzs310 = new_convzs0zssimpflatzs310[i];
        flatzs0zssimpflatzs41                 = ierror_not_an_error;                  /* init */
        flatzs0zssimpflatzs42                 = 0;                                    /* init */
        
        if (ierror_eq (convzs0zssimpflatzs307, ierror_not_an_error)) {
            flatzs0zssimpflatzs41             = ierror_not_an_error;                  /* write */
            flatzs0zssimpflatzs42             = convzs0zssimpflatzs309;               /* write */
        } else {
            flatzs0zssimpflatzs41             = convzs0zssimpflatzs307;               /* write */
            flatzs0zssimpflatzs42             = 0;                                    /* write */
        }
        
        flatzs0zssimpflatzs43                 = flatzs0zssimpflatzs41;                /* read */
        flatzs0zssimpflatzs44                 = flatzs0zssimpflatzs42;                /* read */
        flatzs1zssimpflatzs45                 = ierror_not_an_error;                  /* init */
        flatzs1zssimpflatzs46                 = 0.0;                                  /* init */
        
        if (ierror_eq (flatzs0zssimpflatzs43, ierror_not_an_error)) {
            flatzs1zssimpflatzs45             = ierror_not_an_error;                  /* write */
            flatzs1zssimpflatzs46             = iint_extend (flatzs0zssimpflatzs44);  /* write */
        } else {
            flatzs1zssimpflatzs45             = flatzs0zssimpflatzs43;                /* write */
            flatzs1zssimpflatzs46             = 0.0;                                  /* write */
        }
        
        flatzs1zssimpflatzs47                 = flatzs1zssimpflatzs45;                /* read */
        flatzs1zssimpflatzs48                 = flatzs1zssimpflatzs46;                /* read */
        flatzs2zssimpflatzs49                 = ierror_not_an_error;                  /* init */
        flatzs2zssimpflatzs50                 = 0.0;                                  /* init */
        
        if (ierror_eq (flatzs1zssimpflatzs47, ierror_not_an_error)) {
            flatzs2zssimpflatzs49             = ierror_not_an_error;                  /* write */
            flatzs2zssimpflatzs50             = flatzs1zssimpflatzs48;                /* write */
        } else {
            flatzs2zssimpflatzs49             = flatzs1zssimpflatzs47;                /* write */
            flatzs2zssimpflatzs50             = 0.0;                                  /* write */
        }
        
        flatzs2zssimpflatzs51                 = flatzs2zssimpflatzs49;                /* read */
        flatzs2zssimpflatzs52                 = flatzs2zssimpflatzs50;                /* read */
        acczsconvzs11zssimpflatzs22           = flatzs2zssimpflatzs51;                /* write */
        acczsconvzs11zssimpflatzs23           = flatzs2zssimpflatzs52;                /* write */
        convzs11zsavalzs1zssimpflatzs53       = acczsconvzs11zssimpflatzs22;          /* read */
        convzs11zsavalzs1zssimpflatzs54       = acczsconvzs11zssimpflatzs23;          /* read */
        szsreifyzs6zsconvzs12zsavalzs0zssimpflatzs59 = acczsszsreifyzs6zsconvzs12zssimpflatzs28; /* read */
        szsreifyzs6zsconvzs12zsavalzs0zssimpflatzs60 = acczsszsreifyzs6zsconvzs12zssimpflatzs29; /* read */
        szsreifyzs6zsconvzs12zsavalzs0zssimpflatzs61 = acczsszsreifyzs6zsconvzs12zssimpflatzs30; /* read */
        flatzs3zssimpflatzs62                 = ierror_not_an_error;                  /* init */
        flatzs3zssimpflatzs63                 = 0.0;                                  /* init */
        flatzs3zssimpflatzs64                 = 0.0;                                  /* init */
        
        if (ierror_eq (szsreifyzs6zsconvzs12zsavalzs0zssimpflatzs59, ierror_not_an_error)) {
            flatzs10zssimpflatzs65            = ierror_not_an_error;                  /* init */
            flatzs10zssimpflatzs66            = 0.0;                                  /* init */
            flatzs10zssimpflatzs67            = 0.0;                                  /* init */
            
            if (ierror_eq (szsreifyzs6zsconvzs12zsavalzs0zssimpflatzs59, ierror_not_an_error)) {
                flatzs13zssimpflatzs68        = ierror_not_an_error;                  /* init */
                flatzs13zssimpflatzs69        = 0.0;                                  /* init */
                
                if (ierror_eq (convzs11zsavalzs1zssimpflatzs53, ierror_not_an_error)) {
                    idouble_t        convzs25 = idouble_sub (convzs11zsavalzs1zssimpflatzs54, szsreifyzs6zsconvzs12zsavalzs0zssimpflatzs60); /* let */
                    flatzs35zssimpflatzs70    = ierror_not_an_error;                  /* init */
                    flatzs35zssimpflatzs71    = 0.0;                                  /* init */
                    
                    if (idouble_is_valid (convzs25)) {
                        flatzs35zssimpflatzs70 = ierror_not_an_error;                 /* write */
                        flatzs35zssimpflatzs71 = idouble_sub (convzs11zsavalzs1zssimpflatzs54, szsreifyzs6zsconvzs12zsavalzs0zssimpflatzs60); /* write */
                    } else {
                        flatzs35zssimpflatzs70 = ierror_cannot_compute;               /* write */
                        flatzs35zssimpflatzs71 = 0.0;                                 /* write */
                    }
                    
                    flatzs35zssimpflatzs72    = flatzs35zssimpflatzs70;               /* read */
                    flatzs35zssimpflatzs73    = flatzs35zssimpflatzs71;               /* read */
                    flatzs13zssimpflatzs68    = flatzs35zssimpflatzs72;               /* write */
                    flatzs13zssimpflatzs69    = flatzs35zssimpflatzs73;               /* write */
                } else {
                    flatzs13zssimpflatzs68    = convzs11zsavalzs1zssimpflatzs53;      /* write */
                    flatzs13zssimpflatzs69    = 0.0;                                  /* write */
                }
                
                flatzs13zssimpflatzs74        = flatzs13zssimpflatzs68;               /* read */
                flatzs13zssimpflatzs75        = flatzs13zssimpflatzs69;               /* read */
                flatzs14zssimpflatzs76        = ierror_not_an_error;                  /* init */
                flatzs14zssimpflatzs77        = 0.0;                                  /* init */
                
                if (ierror_eq (flatzs13zssimpflatzs74, ierror_not_an_error)) {
                    idouble_t        convzs30 = idouble_add (szsreifyzs6zsconvzs12zsavalzs0zssimpflatzs61, 1.0); /* let */
                    flatzs28zssimpflatzs78    = ierror_not_an_error;                  /* init */
                    flatzs28zssimpflatzs79    = 0.0;                                  /* init */
                    
                    if (idouble_is_valid (convzs30)) {
                        flatzs28zssimpflatzs78 = ierror_not_an_error;                 /* write */
                        flatzs28zssimpflatzs79 = idouble_add (szsreifyzs6zsconvzs12zsavalzs0zssimpflatzs61, 1.0); /* write */
                    } else {
                        flatzs28zssimpflatzs78 = ierror_cannot_compute;               /* write */
                        flatzs28zssimpflatzs79 = 0.0;                                 /* write */
                    }
                    
                    flatzs28zssimpflatzs80    = flatzs28zssimpflatzs78;               /* read */
                    flatzs28zssimpflatzs81    = flatzs28zssimpflatzs79;               /* read */
                    flatzs29zssimpflatzs82    = ierror_not_an_error;                  /* init */
                    flatzs29zssimpflatzs83    = 0.0;                                  /* init */
                    
                    if (ierror_eq (flatzs28zssimpflatzs80, ierror_not_an_error)) {
                        idouble_t        convzs34 = idouble_div (flatzs13zssimpflatzs75, flatzs28zssimpflatzs81); /* let */
                        flatzs32zssimpflatzs84 = ierror_not_an_error;                 /* init */
                        flatzs32zssimpflatzs85 = 0.0;                                 /* init */
                        
                        if (idouble_is_valid (convzs34)) {
                            flatzs32zssimpflatzs84 = ierror_not_an_error;             /* write */
                            flatzs32zssimpflatzs85 = idouble_div (flatzs13zssimpflatzs75, flatzs28zssimpflatzs81); /* write */
                        } else {
                            flatzs32zssimpflatzs84 = ierror_cannot_compute;           /* write */
                            flatzs32zssimpflatzs85 = 0.0;                             /* write */
                        }
                        
                        flatzs32zssimpflatzs86 = flatzs32zssimpflatzs84;              /* read */
                        flatzs32zssimpflatzs87 = flatzs32zssimpflatzs85;              /* read */
                        flatzs29zssimpflatzs82 = flatzs32zssimpflatzs86;              /* write */
                        flatzs29zssimpflatzs83 = flatzs32zssimpflatzs87;              /* write */
                    } else {
                        flatzs29zssimpflatzs82 = flatzs28zssimpflatzs80;              /* write */
                        flatzs29zssimpflatzs83 = 0.0;                                 /* write */
                    }
                    
                    flatzs29zssimpflatzs88    = flatzs29zssimpflatzs82;               /* read */
                    flatzs29zssimpflatzs89    = flatzs29zssimpflatzs83;               /* read */
                    flatzs14zssimpflatzs76    = flatzs29zssimpflatzs88;               /* write */
                    flatzs14zssimpflatzs77    = flatzs29zssimpflatzs89;               /* write */
                } else {
                    flatzs14zssimpflatzs76    = flatzs13zssimpflatzs74;               /* write */
                    flatzs14zssimpflatzs77    = 0.0;                                  /* write */
                }
                
                flatzs14zssimpflatzs90        = flatzs14zssimpflatzs76;               /* read */
                flatzs14zssimpflatzs91        = flatzs14zssimpflatzs77;               /* read */
                flatzs15zssimpflatzs92        = ierror_not_an_error;                  /* init */
                flatzs15zssimpflatzs93        = 0.0;                                  /* init */
                
                if (ierror_eq (flatzs14zssimpflatzs90, ierror_not_an_error)) {
                    idouble_t        convzs40 = idouble_add (szsreifyzs6zsconvzs12zsavalzs0zssimpflatzs60, flatzs14zssimpflatzs91); /* let */
                    flatzs25zssimpflatzs94    = ierror_not_an_error;                  /* init */
                    flatzs25zssimpflatzs95    = 0.0;                                  /* init */
                    
                    if (idouble_is_valid (convzs40)) {
                        flatzs25zssimpflatzs94 = ierror_not_an_error;                 /* write */
                        flatzs25zssimpflatzs95 = idouble_add (szsreifyzs6zsconvzs12zsavalzs0zssimpflatzs60, flatzs14zssimpflatzs91); /* write */
                    } else {
                        flatzs25zssimpflatzs94 = ierror_cannot_compute;               /* write */
                        flatzs25zssimpflatzs95 = 0.0;                                 /* write */
                    }
                    
                    flatzs25zssimpflatzs96    = flatzs25zssimpflatzs94;               /* read */
                    flatzs25zssimpflatzs97    = flatzs25zssimpflatzs95;               /* read */
                    flatzs15zssimpflatzs92    = flatzs25zssimpflatzs96;               /* write */
                    flatzs15zssimpflatzs93    = flatzs25zssimpflatzs97;               /* write */
                } else {
                    flatzs15zssimpflatzs92    = flatzs14zssimpflatzs90;               /* write */
                    flatzs15zssimpflatzs93    = 0.0;                                  /* write */
                }
                
                flatzs15zssimpflatzs98        = flatzs15zssimpflatzs92;               /* read */
                flatzs15zssimpflatzs99        = flatzs15zssimpflatzs93;               /* read */
                flatzs16zssimpflatzs100       = ierror_not_an_error;                  /* init */
                flatzs16zssimpflatzs101       = 0.0;                                  /* init */
                flatzs16zssimpflatzs102       = 0.0;                                  /* init */
                
                if (ierror_eq (flatzs15zssimpflatzs98, ierror_not_an_error)) {
                    idouble_t        convzs45 = idouble_add (szsreifyzs6zsconvzs12zsavalzs0zssimpflatzs61, 1.0); /* let */
                    flatzs19zssimpflatzs103   = ierror_not_an_error;                  /* init */
                    flatzs19zssimpflatzs104   = 0.0;                                  /* init */
                    
                    if (idouble_is_valid (convzs45)) {
                        flatzs19zssimpflatzs103 = ierror_not_an_error;                /* write */
                        flatzs19zssimpflatzs104 = idouble_add (szsreifyzs6zsconvzs12zsavalzs0zssimpflatzs61, 1.0); /* write */
                    } else {
                        flatzs19zssimpflatzs103 = ierror_cannot_compute;              /* write */
                        flatzs19zssimpflatzs104 = 0.0;                                /* write */
                    }
                    
                    flatzs19zssimpflatzs105   = flatzs19zssimpflatzs103;              /* read */
                    flatzs19zssimpflatzs106   = flatzs19zssimpflatzs104;              /* read */
                    flatzs20zssimpflatzs107   = ierror_not_an_error;                  /* init */
                    flatzs20zssimpflatzs108   = 0.0;                                  /* init */
                    flatzs20zssimpflatzs109   = 0.0;                                  /* init */
                    
                    if (ierror_eq (flatzs19zssimpflatzs105, ierror_not_an_error)) {
                        flatzs20zssimpflatzs107 = ierror_not_an_error;                /* write */
                        flatzs20zssimpflatzs108 = flatzs15zssimpflatzs99;             /* write */
                        flatzs20zssimpflatzs109 = flatzs19zssimpflatzs106;            /* write */
                    } else {
                        flatzs20zssimpflatzs107 = flatzs19zssimpflatzs105;            /* write */
                        flatzs20zssimpflatzs108 = 0.0;                                /* write */
                        flatzs20zssimpflatzs109 = 0.0;                                /* write */
                    }
                    
                    flatzs20zssimpflatzs110   = flatzs20zssimpflatzs107;              /* read */
                    flatzs20zssimpflatzs111   = flatzs20zssimpflatzs108;              /* read */
                    flatzs20zssimpflatzs112   = flatzs20zssimpflatzs109;              /* read */
                    flatzs16zssimpflatzs100   = flatzs20zssimpflatzs110;              /* write */
                    flatzs16zssimpflatzs101   = flatzs20zssimpflatzs111;              /* write */
                    flatzs16zssimpflatzs102   = flatzs20zssimpflatzs112;              /* write */
                } else {
                    flatzs16zssimpflatzs100   = flatzs15zssimpflatzs98;               /* write */
                    flatzs16zssimpflatzs101   = 0.0;                                  /* write */
                    flatzs16zssimpflatzs102   = 0.0;                                  /* write */
                }
                
                flatzs16zssimpflatzs113       = flatzs16zssimpflatzs100;              /* read */
                flatzs16zssimpflatzs114       = flatzs16zssimpflatzs101;              /* read */
                flatzs16zssimpflatzs115       = flatzs16zssimpflatzs102;              /* read */
                flatzs10zssimpflatzs65        = flatzs16zssimpflatzs113;              /* write */
                flatzs10zssimpflatzs66        = flatzs16zssimpflatzs114;              /* write */
                flatzs10zssimpflatzs67        = flatzs16zssimpflatzs115;              /* write */
            } else {
                flatzs10zssimpflatzs65        = szsreifyzs6zsconvzs12zsavalzs0zssimpflatzs59; /* write */
                flatzs10zssimpflatzs66        = 0.0;                                  /* write */
                flatzs10zssimpflatzs67        = 0.0;                                  /* write */
            }
            
            flatzs10zssimpflatzs116           = flatzs10zssimpflatzs65;               /* read */
            flatzs10zssimpflatzs117           = flatzs10zssimpflatzs66;               /* read */
            flatzs10zssimpflatzs118           = flatzs10zssimpflatzs67;               /* read */
            flatzs3zssimpflatzs62             = flatzs10zssimpflatzs116;              /* write */
            flatzs3zssimpflatzs63             = flatzs10zssimpflatzs117;              /* write */
            flatzs3zssimpflatzs64             = flatzs10zssimpflatzs118;              /* write */
        } else {
            flatzs6zssimpflatzs119            = ierror_not_an_error;                  /* init */
            flatzs6zssimpflatzs120            = 0.0;                                  /* init */
            flatzs6zssimpflatzs121            = 0.0;                                  /* init */
            
            if (ierror_eq (ierror_fold1_no_value, szsreifyzs6zsconvzs12zsavalzs0zssimpflatzs59)) {
                flatzs7zssimpflatzs122        = ierror_not_an_error;                  /* init */
                flatzs7zssimpflatzs123        = 0.0;                                  /* init */
                flatzs7zssimpflatzs124        = 0.0;                                  /* init */
                
                if (ierror_eq (convzs11zsavalzs1zssimpflatzs53, ierror_not_an_error)) {
                    flatzs7zssimpflatzs122    = ierror_not_an_error;                  /* write */
                    flatzs7zssimpflatzs123    = convzs11zsavalzs1zssimpflatzs54;      /* write */
                    flatzs7zssimpflatzs124    = 1.0;                                  /* write */
                } else {
                    flatzs7zssimpflatzs122    = convzs11zsavalzs1zssimpflatzs53;      /* write */
                    flatzs7zssimpflatzs123    = 0.0;                                  /* write */
                    flatzs7zssimpflatzs124    = 0.0;                                  /* write */
                }
                
                flatzs7zssimpflatzs125        = flatzs7zssimpflatzs122;               /* read */
                flatzs7zssimpflatzs126        = flatzs7zssimpflatzs123;               /* read */
                flatzs7zssimpflatzs127        = flatzs7zssimpflatzs124;               /* read */
                flatzs6zssimpflatzs119        = flatzs7zssimpflatzs125;               /* write */
                flatzs6zssimpflatzs120        = flatzs7zssimpflatzs126;               /* write */
                flatzs6zssimpflatzs121        = flatzs7zssimpflatzs127;               /* write */
            } else {
                flatzs6zssimpflatzs119        = szsreifyzs6zsconvzs12zsavalzs0zssimpflatzs59; /* write */
                flatzs6zssimpflatzs120        = 0.0;                                  /* write */
                flatzs6zssimpflatzs121        = 0.0;                                  /* write */
            }
            
            flatzs6zssimpflatzs128            = flatzs6zssimpflatzs119;               /* read */
            flatzs6zssimpflatzs129            = flatzs6zssimpflatzs120;               /* read */
            flatzs6zssimpflatzs130            = flatzs6zssimpflatzs121;               /* read */
            flatzs3zssimpflatzs62             = flatzs6zssimpflatzs128;               /* write */
            flatzs3zssimpflatzs63             = flatzs6zssimpflatzs129;               /* write */
            flatzs3zssimpflatzs64             = flatzs6zssimpflatzs130;               /* write */
        }
        
        flatzs3zssimpflatzs131                = flatzs3zssimpflatzs62;                /* read */
        flatzs3zssimpflatzs132                = flatzs3zssimpflatzs63;                /* read */
        flatzs3zssimpflatzs133                = flatzs3zssimpflatzs64;                /* read */
        acczsszsreifyzs6zsconvzs12zssimpflatzs28 = flatzs3zssimpflatzs131;            /* write */
        acczsszsreifyzs6zsconvzs12zssimpflatzs29 = flatzs3zssimpflatzs132;            /* write */
        acczsszsreifyzs6zsconvzs12zssimpflatzs30 = flatzs3zssimpflatzs133;            /* write */
        flatzs36zssimpflatzs134               = ierror_not_an_error;                  /* init */
        flatzs36zssimpflatzs135               = "";                                   /* init */
        
        if (ierror_eq (convzs0zssimpflatzs307, ierror_not_an_error)) {
            flatzs36zssimpflatzs134           = ierror_not_an_error;                  /* write */
            flatzs36zssimpflatzs135           = convzs0zssimpflatzs308;               /* write */
        } else {
            flatzs36zssimpflatzs134           = convzs0zssimpflatzs307;               /* write */
            flatzs36zssimpflatzs135           = "";                                   /* write */
        }
        
        flatzs36zssimpflatzs136               = flatzs36zssimpflatzs134;              /* read */
        flatzs36zssimpflatzs137               = flatzs36zssimpflatzs135;              /* read */
        flatzs37zssimpflatzs138               = ierror_not_an_error;                  /* init */
        flatzs37zssimpflatzs139               = ifalse;                               /* init */
        
        if (ierror_eq (flatzs36zssimpflatzs136, ierror_not_an_error)) {
            flatzs37zssimpflatzs138           = ierror_not_an_error;                  /* write */
            flatzs37zssimpflatzs139           = istring_eq (flatzs36zssimpflatzs137, "torso"); /* write */
        } else {
            flatzs37zssimpflatzs138           = flatzs36zssimpflatzs136;              /* write */
            flatzs37zssimpflatzs139           = ifalse;                               /* write */
        }
        
        flatzs37zssimpflatzs140               = flatzs37zssimpflatzs138;              /* read */
        flatzs37zssimpflatzs141               = flatzs37zssimpflatzs139;              /* read */
        flatzs38                              = ifalse;                               /* init */
        
        if (ierror_eq (flatzs37zssimpflatzs140, ierror_not_an_error)) {
            flatzs38                          = flatzs37zssimpflatzs141;              /* write */
        } else {
            flatzs38                          = itrue;                                /* write */
        }
        
        flatzs38                              = flatzs38;                             /* read */
        
        if (flatzs38) {
            flatzs39zssimpflatzs142           = ierror_not_an_error;                  /* init */
            flatzs39zssimpflatzs143           = 0;                                    /* init */
            
            if (ierror_eq (convzs0zssimpflatzs307, ierror_not_an_error)) {
                flatzs39zssimpflatzs142       = ierror_not_an_error;                  /* write */
                flatzs39zssimpflatzs143       = convzs0zssimpflatzs309;               /* write */
            } else {
                flatzs39zssimpflatzs142       = convzs0zssimpflatzs307;               /* write */
                flatzs39zssimpflatzs143       = 0;                                    /* write */
            }
            
            flatzs39zssimpflatzs144           = flatzs39zssimpflatzs142;              /* read */
            flatzs39zssimpflatzs145           = flatzs39zssimpflatzs143;              /* read */
            flatzs40zssimpflatzs146           = ierror_not_an_error;                  /* init */
            flatzs40zssimpflatzs147           = 0.0;                                  /* init */
            
            if (ierror_eq (flatzs39zssimpflatzs144, ierror_not_an_error)) {
                flatzs40zssimpflatzs146       = ierror_not_an_error;                  /* write */
                flatzs40zssimpflatzs147       = iint_extend (flatzs39zssimpflatzs145); /* write */
            } else {
                flatzs40zssimpflatzs146       = flatzs39zssimpflatzs144;              /* write */
                flatzs40zssimpflatzs147       = 0.0;                                  /* write */
            }
            
            flatzs40zssimpflatzs148           = flatzs40zssimpflatzs146;              /* read */
            flatzs40zssimpflatzs149           = flatzs40zssimpflatzs147;              /* read */
            acczsconvzs76zssimpflatzs31       = flatzs40zssimpflatzs148;              /* write */
            acczsconvzs76zssimpflatzs32       = flatzs40zssimpflatzs149;              /* write */
            convzs76zsavalzs3zssimpflatzs150  = acczsconvzs76zssimpflatzs31;          /* read */
            convzs76zsavalzs3zssimpflatzs151  = acczsconvzs76zssimpflatzs32;          /* read */
            azsconvzs77zsavalzs2zssimpflatzs156 = acczsazsconvzs77zssimpflatzs37;     /* read */
            azsconvzs77zsavalzs2zssimpflatzs157 = acczsazsconvzs77zssimpflatzs38;     /* read */
            azsconvzs77zsavalzs2zssimpflatzs158 = acczsazsconvzs77zssimpflatzs39;     /* read */
            azsconvzs77zsavalzs2zssimpflatzs159 = acczsazsconvzs77zssimpflatzs40;     /* read */
            flatzs41zssimpflatzs160           = ierror_not_an_error;                  /* init */
            flatzs41zssimpflatzs161           = 0.0;                                  /* init */
            flatzs41zssimpflatzs162           = 0.0;                                  /* init */
            flatzs41zssimpflatzs163           = 0.0;                                  /* init */
            
            if (ierror_eq (azsconvzs77zsavalzs2zssimpflatzs156, ierror_not_an_error)) {
                idouble_t        convzs84     = idouble_add (azsconvzs77zsavalzs2zssimpflatzs157, 1.0); /* let */
                flatzs44zssimpflatzs164       = ierror_not_an_error;                  /* init */
                flatzs44zssimpflatzs165       = 0.0;                                  /* init */
                
                if (idouble_is_valid (convzs84)) {
                    flatzs44zssimpflatzs164   = ierror_not_an_error;                  /* write */
                    flatzs44zssimpflatzs165   = idouble_add (azsconvzs77zsavalzs2zssimpflatzs157, 1.0); /* write */
                } else {
                    flatzs44zssimpflatzs164   = ierror_cannot_compute;                /* write */
                    flatzs44zssimpflatzs165   = 0.0;                                  /* write */
                }
                
                flatzs44zssimpflatzs166       = flatzs44zssimpflatzs164;              /* read */
                flatzs44zssimpflatzs167       = flatzs44zssimpflatzs165;              /* read */
                flatzs45zssimpflatzs168       = ierror_not_an_error;                  /* init */
                flatzs45zssimpflatzs169       = 0.0;                                  /* init */
                
                if (ierror_eq (convzs76zsavalzs3zssimpflatzs150, ierror_not_an_error)) {
                    idouble_t        convzs89 = idouble_sub (convzs76zsavalzs3zssimpflatzs151, azsconvzs77zsavalzs2zssimpflatzs158); /* let */
                    flatzs89zssimpflatzs170   = ierror_not_an_error;                  /* init */
                    flatzs89zssimpflatzs171   = 0.0;                                  /* init */
                    
                    if (idouble_is_valid (convzs89)) {
                        flatzs89zssimpflatzs170 = ierror_not_an_error;                /* write */
                        flatzs89zssimpflatzs171 = idouble_sub (convzs76zsavalzs3zssimpflatzs151, azsconvzs77zsavalzs2zssimpflatzs158); /* write */
                    } else {
                        flatzs89zssimpflatzs170 = ierror_cannot_compute;              /* write */
                        flatzs89zssimpflatzs171 = 0.0;                                /* write */
                    }
                    
                    flatzs89zssimpflatzs172   = flatzs89zssimpflatzs170;              /* read */
                    flatzs89zssimpflatzs173   = flatzs89zssimpflatzs171;              /* read */
                    flatzs45zssimpflatzs168   = flatzs89zssimpflatzs172;              /* write */
                    flatzs45zssimpflatzs169   = flatzs89zssimpflatzs173;              /* write */
                } else {
                    flatzs45zssimpflatzs168   = convzs76zsavalzs3zssimpflatzs150;     /* write */
                    flatzs45zssimpflatzs169   = 0.0;                                  /* write */
                }
                
                flatzs45zssimpflatzs174       = flatzs45zssimpflatzs168;              /* read */
                flatzs45zssimpflatzs175       = flatzs45zssimpflatzs169;              /* read */
                flatzs46zssimpflatzs176       = ierror_not_an_error;                  /* init */
                flatzs46zssimpflatzs177       = 0.0;                                  /* init */
                
                if (ierror_eq (flatzs45zssimpflatzs174, ierror_not_an_error)) {
                    flatzs83zssimpflatzs178   = ierror_not_an_error;                  /* init */
                    flatzs83zssimpflatzs179   = 0.0;                                  /* init */
                    
                    if (ierror_eq (flatzs44zssimpflatzs166, ierror_not_an_error)) {
                        idouble_t        convzs97 = idouble_div (flatzs45zssimpflatzs175, flatzs44zssimpflatzs167); /* let */
                        flatzs86zssimpflatzs180 = ierror_not_an_error;                /* init */
                        flatzs86zssimpflatzs181 = 0.0;                                /* init */
                        
                        if (idouble_is_valid (convzs97)) {
                            flatzs86zssimpflatzs180 = ierror_not_an_error;            /* write */
                            flatzs86zssimpflatzs181 = idouble_div (flatzs45zssimpflatzs175, flatzs44zssimpflatzs167); /* write */
                        } else {
                            flatzs86zssimpflatzs180 = ierror_cannot_compute;          /* write */
                            flatzs86zssimpflatzs181 = 0.0;                            /* write */
                        }
                        
                        flatzs86zssimpflatzs182 = flatzs86zssimpflatzs180;            /* read */
                        flatzs86zssimpflatzs183 = flatzs86zssimpflatzs181;            /* read */
                        flatzs83zssimpflatzs178 = flatzs86zssimpflatzs182;            /* write */
                        flatzs83zssimpflatzs179 = flatzs86zssimpflatzs183;            /* write */
                    } else {
                        flatzs83zssimpflatzs178 = flatzs44zssimpflatzs166;            /* write */
                        flatzs83zssimpflatzs179 = 0.0;                                /* write */
                    }
                    
                    flatzs83zssimpflatzs184   = flatzs83zssimpflatzs178;              /* read */
                    flatzs83zssimpflatzs185   = flatzs83zssimpflatzs179;              /* read */
                    flatzs46zssimpflatzs176   = flatzs83zssimpflatzs184;              /* write */
                    flatzs46zssimpflatzs177   = flatzs83zssimpflatzs185;              /* write */
                } else {
                    flatzs46zssimpflatzs176   = flatzs45zssimpflatzs174;              /* write */
                    flatzs46zssimpflatzs177   = 0.0;                                  /* write */
                }
                
                flatzs46zssimpflatzs186       = flatzs46zssimpflatzs176;              /* read */
                flatzs46zssimpflatzs187       = flatzs46zssimpflatzs177;              /* read */
                flatzs47zssimpflatzs188       = ierror_not_an_error;                  /* init */
                flatzs47zssimpflatzs189       = 0.0;                                  /* init */
                
                if (ierror_eq (flatzs46zssimpflatzs186, ierror_not_an_error)) {
                    idouble_t        convzs103 = idouble_add (azsconvzs77zsavalzs2zssimpflatzs158, flatzs46zssimpflatzs187); /* let */
                    flatzs80zssimpflatzs190   = ierror_not_an_error;                  /* init */
                    flatzs80zssimpflatzs191   = 0.0;                                  /* init */
                    
                    if (idouble_is_valid (convzs103)) {
                        flatzs80zssimpflatzs190 = ierror_not_an_error;                /* write */
                        flatzs80zssimpflatzs191 = idouble_add (azsconvzs77zsavalzs2zssimpflatzs158, flatzs46zssimpflatzs187); /* write */
                    } else {
                        flatzs80zssimpflatzs190 = ierror_cannot_compute;              /* write */
                        flatzs80zssimpflatzs191 = 0.0;                                /* write */
                    }
                    
                    flatzs80zssimpflatzs192   = flatzs80zssimpflatzs190;              /* read */
                    flatzs80zssimpflatzs193   = flatzs80zssimpflatzs191;              /* read */
                    flatzs47zssimpflatzs188   = flatzs80zssimpflatzs192;              /* write */
                    flatzs47zssimpflatzs189   = flatzs80zssimpflatzs193;              /* write */
                } else {
                    flatzs47zssimpflatzs188   = flatzs46zssimpflatzs186;              /* write */
                    flatzs47zssimpflatzs189   = 0.0;                                  /* write */
                }
                
                flatzs47zssimpflatzs194       = flatzs47zssimpflatzs188;              /* read */
                flatzs47zssimpflatzs195       = flatzs47zssimpflatzs189;              /* read */
                flatzs48zssimpflatzs196       = ierror_not_an_error;                  /* init */
                flatzs48zssimpflatzs197       = 0.0;                                  /* init */
                
                if (ierror_eq (flatzs45zssimpflatzs174, ierror_not_an_error)) {
                    flatzs67zssimpflatzs198   = ierror_not_an_error;                  /* init */
                    flatzs67zssimpflatzs199   = 0.0;                                  /* init */
                    
                    if (ierror_eq (convzs76zsavalzs3zssimpflatzs150, ierror_not_an_error)) {
                        flatzs74zssimpflatzs200 = ierror_not_an_error;                /* init */
                        flatzs74zssimpflatzs201 = 0.0;                                /* init */
                        
                        if (ierror_eq (flatzs47zssimpflatzs194, ierror_not_an_error)) {
                            idouble_t        convzs113 = idouble_sub (convzs76zsavalzs3zssimpflatzs151, flatzs47zssimpflatzs195); /* let */
                            flatzs77zssimpflatzs202 = ierror_not_an_error;            /* init */
                            flatzs77zssimpflatzs203 = 0.0;                            /* init */
                            
                            if (idouble_is_valid (convzs113)) {
                                flatzs77zssimpflatzs202 = ierror_not_an_error;        /* write */
                                flatzs77zssimpflatzs203 = idouble_sub (convzs76zsavalzs3zssimpflatzs151, flatzs47zssimpflatzs195); /* write */
                            } else {
                                flatzs77zssimpflatzs202 = ierror_cannot_compute;      /* write */
                                flatzs77zssimpflatzs203 = 0.0;                        /* write */
                            }
                            
                            flatzs77zssimpflatzs204 = flatzs77zssimpflatzs202;        /* read */
                            flatzs77zssimpflatzs205 = flatzs77zssimpflatzs203;        /* read */
                            flatzs74zssimpflatzs200 = flatzs77zssimpflatzs204;        /* write */
                            flatzs74zssimpflatzs201 = flatzs77zssimpflatzs205;        /* write */
                        } else {
                            flatzs74zssimpflatzs200 = flatzs47zssimpflatzs194;        /* write */
                            flatzs74zssimpflatzs201 = 0.0;                            /* write */
                        }
                        
                        flatzs74zssimpflatzs206 = flatzs74zssimpflatzs200;            /* read */
                        flatzs74zssimpflatzs207 = flatzs74zssimpflatzs201;            /* read */
                        flatzs67zssimpflatzs198 = flatzs74zssimpflatzs206;            /* write */
                        flatzs67zssimpflatzs199 = flatzs74zssimpflatzs207;            /* write */
                    } else {
                        flatzs67zssimpflatzs198 = convzs76zsavalzs3zssimpflatzs150;   /* write */
                        flatzs67zssimpflatzs199 = 0.0;                                /* write */
                    }
                    
                    flatzs67zssimpflatzs208   = flatzs67zssimpflatzs198;              /* read */
                    flatzs67zssimpflatzs209   = flatzs67zssimpflatzs199;              /* read */
                    flatzs68zssimpflatzs210   = ierror_not_an_error;                  /* init */
                    flatzs68zssimpflatzs211   = 0.0;                                  /* init */
                    
                    if (ierror_eq (flatzs67zssimpflatzs208, ierror_not_an_error)) {
                        idouble_t        convzs119 = idouble_mul (flatzs45zssimpflatzs175, flatzs67zssimpflatzs209); /* let */
                        flatzs71zssimpflatzs212 = ierror_not_an_error;                /* init */
                        flatzs71zssimpflatzs213 = 0.0;                                /* init */
                        
                        if (idouble_is_valid (convzs119)) {
                            flatzs71zssimpflatzs212 = ierror_not_an_error;            /* write */
                            flatzs71zssimpflatzs213 = idouble_mul (flatzs45zssimpflatzs175, flatzs67zssimpflatzs209); /* write */
                        } else {
                            flatzs71zssimpflatzs212 = ierror_cannot_compute;          /* write */
                            flatzs71zssimpflatzs213 = 0.0;                            /* write */
                        }
                        
                        flatzs71zssimpflatzs214 = flatzs71zssimpflatzs212;            /* read */
                        flatzs71zssimpflatzs215 = flatzs71zssimpflatzs213;            /* read */
                        flatzs68zssimpflatzs210 = flatzs71zssimpflatzs214;            /* write */
                        flatzs68zssimpflatzs211 = flatzs71zssimpflatzs215;            /* write */
                    } else {
                        flatzs68zssimpflatzs210 = flatzs67zssimpflatzs208;            /* write */
                        flatzs68zssimpflatzs211 = 0.0;                                /* write */
                    }
                    
                    flatzs68zssimpflatzs216   = flatzs68zssimpflatzs210;              /* read */
                    flatzs68zssimpflatzs217   = flatzs68zssimpflatzs211;              /* read */
                    flatzs48zssimpflatzs196   = flatzs68zssimpflatzs216;              /* write */
                    flatzs48zssimpflatzs197   = flatzs68zssimpflatzs217;              /* write */
                } else {
                    flatzs48zssimpflatzs196   = flatzs45zssimpflatzs174;              /* write */
                    flatzs48zssimpflatzs197   = 0.0;                                  /* write */
                }
                
                flatzs48zssimpflatzs218       = flatzs48zssimpflatzs196;              /* read */
                flatzs48zssimpflatzs219       = flatzs48zssimpflatzs197;              /* read */
                flatzs49zssimpflatzs220       = ierror_not_an_error;                  /* init */
                flatzs49zssimpflatzs221       = 0.0;                                  /* init */
                
                if (ierror_eq (flatzs48zssimpflatzs218, ierror_not_an_error)) {
                    idouble_t        convzs125 = idouble_add (azsconvzs77zsavalzs2zssimpflatzs159, flatzs48zssimpflatzs219); /* let */
                    flatzs64zssimpflatzs222   = ierror_not_an_error;                  /* init */
                    flatzs64zssimpflatzs223   = 0.0;                                  /* init */
                    
                    if (idouble_is_valid (convzs125)) {
                        flatzs64zssimpflatzs222 = ierror_not_an_error;                /* write */
                        flatzs64zssimpflatzs223 = idouble_add (azsconvzs77zsavalzs2zssimpflatzs159, flatzs48zssimpflatzs219); /* write */
                    } else {
                        flatzs64zssimpflatzs222 = ierror_cannot_compute;              /* write */
                        flatzs64zssimpflatzs223 = 0.0;                                /* write */
                    }
                    
                    flatzs64zssimpflatzs224   = flatzs64zssimpflatzs222;              /* read */
                    flatzs64zssimpflatzs225   = flatzs64zssimpflatzs223;              /* read */
                    flatzs49zssimpflatzs220   = flatzs64zssimpflatzs224;              /* write */
                    flatzs49zssimpflatzs221   = flatzs64zssimpflatzs225;              /* write */
                } else {
                    flatzs49zssimpflatzs220   = flatzs48zssimpflatzs218;              /* write */
                    flatzs49zssimpflatzs221   = 0.0;                                  /* write */
                }
                
                flatzs49zssimpflatzs226       = flatzs49zssimpflatzs220;              /* read */
                flatzs49zssimpflatzs227       = flatzs49zssimpflatzs221;              /* read */
                flatzs50zssimpflatzs228       = ierror_not_an_error;                  /* init */
                flatzs50zssimpflatzs229       = 0.0;                                  /* init */
                flatzs50zssimpflatzs230       = 0.0;                                  /* init */
                
                if (ierror_eq (flatzs44zssimpflatzs166, ierror_not_an_error)) {
                    flatzs59zssimpflatzs231   = ierror_not_an_error;                  /* init */
                    flatzs59zssimpflatzs232   = 0.0;                                  /* init */
                    flatzs59zssimpflatzs233   = 0.0;                                  /* init */
                    
                    if (ierror_eq (flatzs47zssimpflatzs194, ierror_not_an_error)) {
                        flatzs59zssimpflatzs231 = ierror_not_an_error;                /* write */
                        flatzs59zssimpflatzs232 = flatzs44zssimpflatzs167;            /* write */
                        flatzs59zssimpflatzs233 = flatzs47zssimpflatzs195;            /* write */
                    } else {
                        flatzs59zssimpflatzs231 = flatzs47zssimpflatzs194;            /* write */
                        flatzs59zssimpflatzs232 = 0.0;                                /* write */
                        flatzs59zssimpflatzs233 = 0.0;                                /* write */
                    }
                    
                    flatzs59zssimpflatzs234   = flatzs59zssimpflatzs231;              /* read */
                    flatzs59zssimpflatzs235   = flatzs59zssimpflatzs232;              /* read */
                    flatzs59zssimpflatzs236   = flatzs59zssimpflatzs233;              /* read */
                    flatzs50zssimpflatzs228   = flatzs59zssimpflatzs234;              /* write */
                    flatzs50zssimpflatzs229   = flatzs59zssimpflatzs235;              /* write */
                    flatzs50zssimpflatzs230   = flatzs59zssimpflatzs236;              /* write */
                } else {
                    flatzs50zssimpflatzs228   = flatzs44zssimpflatzs166;              /* write */
                    flatzs50zssimpflatzs229   = 0.0;                                  /* write */
                    flatzs50zssimpflatzs230   = 0.0;                                  /* write */
                }
                
                flatzs50zssimpflatzs237       = flatzs50zssimpflatzs228;              /* read */
                flatzs50zssimpflatzs238       = flatzs50zssimpflatzs229;              /* read */
                flatzs50zssimpflatzs239       = flatzs50zssimpflatzs230;              /* read */
                flatzs51zssimpflatzs240       = ierror_not_an_error;                  /* init */
                flatzs51zssimpflatzs241       = 0.0;                                  /* init */
                flatzs51zssimpflatzs242       = 0.0;                                  /* init */
                flatzs51zssimpflatzs243       = 0.0;                                  /* init */
                
                if (ierror_eq (flatzs50zssimpflatzs237, ierror_not_an_error)) {
                    flatzs54zssimpflatzs244   = ierror_not_an_error;                  /* init */
                    flatzs54zssimpflatzs245   = 0.0;                                  /* init */
                    flatzs54zssimpflatzs246   = 0.0;                                  /* init */
                    flatzs54zssimpflatzs247   = 0.0;                                  /* init */
                    
                    if (ierror_eq (flatzs49zssimpflatzs226, ierror_not_an_error)) {
                        flatzs54zssimpflatzs244 = ierror_not_an_error;                /* write */
                        flatzs54zssimpflatzs245 = flatzs50zssimpflatzs238;            /* write */
                        flatzs54zssimpflatzs246 = flatzs50zssimpflatzs239;            /* write */
                        flatzs54zssimpflatzs247 = flatzs49zssimpflatzs227;            /* write */
                    } else {
                        flatzs54zssimpflatzs244 = flatzs49zssimpflatzs226;            /* write */
                        flatzs54zssimpflatzs245 = 0.0;                                /* write */
                        flatzs54zssimpflatzs246 = 0.0;                                /* write */
                        flatzs54zssimpflatzs247 = 0.0;                                /* write */
                    }
                    
                    flatzs54zssimpflatzs248   = flatzs54zssimpflatzs244;              /* read */
                    flatzs54zssimpflatzs249   = flatzs54zssimpflatzs245;              /* read */
                    flatzs54zssimpflatzs250   = flatzs54zssimpflatzs246;              /* read */
                    flatzs54zssimpflatzs251   = flatzs54zssimpflatzs247;              /* read */
                    flatzs51zssimpflatzs240   = flatzs54zssimpflatzs248;              /* write */
                    flatzs51zssimpflatzs241   = flatzs54zssimpflatzs249;              /* write */
                    flatzs51zssimpflatzs242   = flatzs54zssimpflatzs250;              /* write */
                    flatzs51zssimpflatzs243   = flatzs54zssimpflatzs251;              /* write */
                } else {
                    flatzs51zssimpflatzs240   = flatzs50zssimpflatzs237;              /* write */
                    flatzs51zssimpflatzs241   = 0.0;                                  /* write */
                    flatzs51zssimpflatzs242   = 0.0;                                  /* write */
                    flatzs51zssimpflatzs243   = 0.0;                                  /* write */
                }
                
                flatzs51zssimpflatzs252       = flatzs51zssimpflatzs240;              /* read */
                flatzs51zssimpflatzs253       = flatzs51zssimpflatzs241;              /* read */
                flatzs51zssimpflatzs254       = flatzs51zssimpflatzs242;              /* read */
                flatzs51zssimpflatzs255       = flatzs51zssimpflatzs243;              /* read */
                flatzs41zssimpflatzs160       = flatzs51zssimpflatzs252;              /* write */
                flatzs41zssimpflatzs161       = flatzs51zssimpflatzs253;              /* write */
                flatzs41zssimpflatzs162       = flatzs51zssimpflatzs254;              /* write */
                flatzs41zssimpflatzs163       = flatzs51zssimpflatzs255;              /* write */
            } else {
                flatzs41zssimpflatzs160       = azsconvzs77zsavalzs2zssimpflatzs156;  /* write */
                flatzs41zssimpflatzs161       = 0.0;                                  /* write */
                flatzs41zssimpflatzs162       = 0.0;                                  /* write */
                flatzs41zssimpflatzs163       = 0.0;                                  /* write */
            }
            
            flatzs41zssimpflatzs256           = flatzs41zssimpflatzs160;              /* read */
            flatzs41zssimpflatzs257           = flatzs41zssimpflatzs161;              /* read */
            flatzs41zssimpflatzs258           = flatzs41zssimpflatzs162;              /* read */
            flatzs41zssimpflatzs259           = flatzs41zssimpflatzs163;              /* read */
            acczsazsconvzs77zssimpflatzs37    = flatzs41zssimpflatzs256;              /* write */
            acczsazsconvzs77zssimpflatzs38    = flatzs41zssimpflatzs257;              /* write */
            acczsazsconvzs77zssimpflatzs39    = flatzs41zssimpflatzs258;              /* write */
            acczsazsconvzs77zssimpflatzs40    = flatzs41zssimpflatzs259;              /* write */
        }
        
    }
    
    s->has_0_0_acczsazsconvzs77zssimpflatzs37 = itrue;                                /* save */
    s->res_0_0_acczsazsconvzs77zssimpflatzs37 = acczsazsconvzs77zssimpflatzs37;       /* save */
    
    s->has_0_0_acczsazsconvzs77zssimpflatzs38 = itrue;                                /* save */
    s->res_0_0_acczsazsconvzs77zssimpflatzs38 = acczsazsconvzs77zssimpflatzs38;       /* save */
    
    s->has_0_0_acczsazsconvzs77zssimpflatzs39 = itrue;                                /* save */
    s->res_0_0_acczsazsconvzs77zssimpflatzs39 = acczsazsconvzs77zssimpflatzs39;       /* save */
    
    s->has_0_0_acczsazsconvzs77zssimpflatzs40 = itrue;                                /* save */
    s->res_0_0_acczsazsconvzs77zssimpflatzs40 = acczsazsconvzs77zssimpflatzs40;       /* save */
    
    s->has_0_0_acczsconvzs76zssimpflatzs31    = itrue;                                /* save */
    s->res_0_0_acczsconvzs76zssimpflatzs31    = acczsconvzs76zssimpflatzs31;          /* save */
    
    s->has_0_0_acczsconvzs76zssimpflatzs32    = itrue;                                /* save */
    s->res_0_0_acczsconvzs76zssimpflatzs32    = acczsconvzs76zssimpflatzs32;          /* save */
    
    s->has_0_0_acczsszsreifyzs6zsconvzs12zssimpflatzs28 = itrue;                      /* save */
    s->res_0_0_acczsszsreifyzs6zsconvzs12zssimpflatzs28 = acczsszsreifyzs6zsconvzs12zssimpflatzs28; /* save */
    
    s->has_0_0_acczsszsreifyzs6zsconvzs12zssimpflatzs29 = itrue;                      /* save */
    s->res_0_0_acczsszsreifyzs6zsconvzs12zssimpflatzs29 = acczsszsreifyzs6zsconvzs12zssimpflatzs29; /* save */
    
    s->has_0_0_acczsszsreifyzs6zsconvzs12zssimpflatzs30 = itrue;                      /* save */
    s->res_0_0_acczsszsreifyzs6zsconvzs12zssimpflatzs30 = acczsszsreifyzs6zsconvzs12zssimpflatzs30; /* save */
    
    s->has_0_0_acczsconvzs11zssimpflatzs22    = itrue;                                /* save */
    s->res_0_0_acczsconvzs11zssimpflatzs22    = acczsconvzs11zssimpflatzs22;          /* save */
    
    s->has_0_0_acczsconvzs11zssimpflatzs23    = itrue;                                /* save */
    s->res_0_0_acczsconvzs11zssimpflatzs23    = acczsconvzs11zssimpflatzs23;          /* save */
    
    azsconvzs77zssimpflatzs260                = acczsazsconvzs77zssimpflatzs37;       /* read */
    azsconvzs77zssimpflatzs261                = acczsazsconvzs77zssimpflatzs38;       /* read */
    azsconvzs77zssimpflatzs263                = acczsazsconvzs77zssimpflatzs40;       /* read */
    szsreifyzs6zsconvzs12zssimpflatzs264      = acczsszsreifyzs6zsconvzs12zssimpflatzs28; /* read */
    szsreifyzs6zsconvzs12zssimpflatzs265      = acczsszsreifyzs6zsconvzs12zssimpflatzs29; /* read */
    flatzs110zssimpflatzs267                  = ierror_not_an_error;                  /* init */
    flatzs110zssimpflatzs268                  = 0.0;                                  /* init */
    
    if (ierror_eq (szsreifyzs6zsconvzs12zssimpflatzs264, ierror_not_an_error)) {
        flatzs110zssimpflatzs267              = ierror_not_an_error;                  /* write */
        flatzs110zssimpflatzs268              = szsreifyzs6zsconvzs12zssimpflatzs265; /* write */
    } else {
        flatzs110zssimpflatzs267              = szsreifyzs6zsconvzs12zssimpflatzs264; /* write */
        flatzs110zssimpflatzs268              = 0.0;                                  /* write */
    }
    
    flatzs110zssimpflatzs269                  = flatzs110zssimpflatzs267;             /* read */
    flatzs110zssimpflatzs270                  = flatzs110zssimpflatzs268;             /* read */
    flatzs111zssimpflatzs271                  = ierror_not_an_error;                  /* init */
    flatzs111zssimpflatzs272                  = 0.0;                                  /* init */
    
    if (ierror_eq (flatzs110zssimpflatzs269, ierror_not_an_error)) {
        flatzs114zssimpflatzs273              = ierror_not_an_error;                  /* init */
        flatzs114zssimpflatzs274              = 0.0;                                  /* init */
        
        if (ierror_eq (azsconvzs77zssimpflatzs260, ierror_not_an_error)) {
            idouble_t        convzs152        = idouble_sub (azsconvzs77zssimpflatzs261, 1.0); /* let */
            flatzs125zssimpflatzs275          = ierror_not_an_error;                  /* init */
            flatzs125zssimpflatzs276          = 0.0;                                  /* init */
            
            if (idouble_is_valid (convzs152)) {
                flatzs125zssimpflatzs275      = ierror_not_an_error;                  /* write */
                flatzs125zssimpflatzs276      = idouble_sub (azsconvzs77zssimpflatzs261, 1.0); /* write */
            } else {
                flatzs125zssimpflatzs275      = ierror_cannot_compute;                /* write */
                flatzs125zssimpflatzs276      = 0.0;                                  /* write */
            }
            
            flatzs125zssimpflatzs277          = flatzs125zssimpflatzs275;             /* read */
            flatzs125zssimpflatzs278          = flatzs125zssimpflatzs276;             /* read */
            flatzs126zssimpflatzs279          = ierror_not_an_error;                  /* init */
            flatzs126zssimpflatzs280          = 0.0;                                  /* init */
            
            if (ierror_eq (flatzs125zssimpflatzs277, ierror_not_an_error)) {
                idouble_t        convzs158    = idouble_div (azsconvzs77zssimpflatzs263, flatzs125zssimpflatzs278); /* let */
                flatzs129zssimpflatzs281      = ierror_not_an_error;                  /* init */
                flatzs129zssimpflatzs282      = 0.0;                                  /* init */
                
                if (idouble_is_valid (convzs158)) {
                    flatzs129zssimpflatzs281  = ierror_not_an_error;                  /* write */
                    flatzs129zssimpflatzs282  = idouble_div (azsconvzs77zssimpflatzs263, flatzs125zssimpflatzs278); /* write */
                } else {
                    flatzs129zssimpflatzs281  = ierror_cannot_compute;                /* write */
                    flatzs129zssimpflatzs282  = 0.0;                                  /* write */
                }
                
                flatzs129zssimpflatzs283      = flatzs129zssimpflatzs281;             /* read */
                flatzs129zssimpflatzs284      = flatzs129zssimpflatzs282;             /* read */
                flatzs126zssimpflatzs279      = flatzs129zssimpflatzs283;             /* write */
                flatzs126zssimpflatzs280      = flatzs129zssimpflatzs284;             /* write */
            } else {
                flatzs126zssimpflatzs279      = flatzs125zssimpflatzs277;             /* write */
                flatzs126zssimpflatzs280      = 0.0;                                  /* write */
            }
            
            flatzs126zssimpflatzs285          = flatzs126zssimpflatzs279;             /* read */
            flatzs126zssimpflatzs286          = flatzs126zssimpflatzs280;             /* read */
            flatzs114zssimpflatzs273          = flatzs126zssimpflatzs285;             /* write */
            flatzs114zssimpflatzs274          = flatzs126zssimpflatzs286;             /* write */
        } else {
            flatzs114zssimpflatzs273          = azsconvzs77zssimpflatzs260;           /* write */
            flatzs114zssimpflatzs274          = 0.0;                                  /* write */
        }
        
        flatzs114zssimpflatzs287              = flatzs114zssimpflatzs273;             /* read */
        flatzs114zssimpflatzs288              = flatzs114zssimpflatzs274;             /* read */
        flatzs115zssimpflatzs289              = ierror_not_an_error;                  /* init */
        flatzs115zssimpflatzs290              = 0.0;                                  /* init */
        
        if (ierror_eq (flatzs114zssimpflatzs287, ierror_not_an_error)) {
            idouble_t        convzs172        = idouble_sqrt (flatzs114zssimpflatzs288); /* let */
            flatzs122zssimpflatzs291          = ierror_not_an_error;                  /* init */
            flatzs122zssimpflatzs292          = 0.0;                                  /* init */
            
            if (idouble_is_valid (convzs172)) {
                flatzs122zssimpflatzs291      = ierror_not_an_error;                  /* write */
                flatzs122zssimpflatzs292      = idouble_sqrt (flatzs114zssimpflatzs288); /* write */
            } else {
                flatzs122zssimpflatzs291      = ierror_cannot_compute;                /* write */
                flatzs122zssimpflatzs292      = 0.0;                                  /* write */
            }
            
            flatzs122zssimpflatzs293          = flatzs122zssimpflatzs291;             /* read */
            flatzs122zssimpflatzs294          = flatzs122zssimpflatzs292;             /* read */
            flatzs115zssimpflatzs289          = flatzs122zssimpflatzs293;             /* write */
            flatzs115zssimpflatzs290          = flatzs122zssimpflatzs294;             /* write */
        } else {
            flatzs115zssimpflatzs289          = flatzs114zssimpflatzs287;             /* write */
            flatzs115zssimpflatzs290          = 0.0;                                  /* write */
        }
        
        flatzs115zssimpflatzs295              = flatzs115zssimpflatzs289;             /* read */
        flatzs115zssimpflatzs296              = flatzs115zssimpflatzs290;             /* read */
        flatzs116zssimpflatzs297              = ierror_not_an_error;                  /* init */
        flatzs116zssimpflatzs298              = 0.0;                                  /* init */
        
        if (ierror_eq (flatzs115zssimpflatzs295, ierror_not_an_error)) {
            idouble_t        convzs180        = idouble_mul (flatzs110zssimpflatzs270, flatzs115zssimpflatzs296); /* let */
            flatzs119zssimpflatzs299          = ierror_not_an_error;                  /* init */
            flatzs119zssimpflatzs300          = 0.0;                                  /* init */
            
            if (idouble_is_valid (convzs180)) {
                flatzs119zssimpflatzs299      = ierror_not_an_error;                  /* write */
                flatzs119zssimpflatzs300      = idouble_mul (flatzs110zssimpflatzs270, flatzs115zssimpflatzs296); /* write */
            } else {
                flatzs119zssimpflatzs299      = ierror_cannot_compute;                /* write */
                flatzs119zssimpflatzs300      = 0.0;                                  /* write */
            }
            
            flatzs119zssimpflatzs301          = flatzs119zssimpflatzs299;             /* read */
            flatzs119zssimpflatzs302          = flatzs119zssimpflatzs300;             /* read */
            flatzs116zssimpflatzs297          = flatzs119zssimpflatzs301;             /* write */
            flatzs116zssimpflatzs298          = flatzs119zssimpflatzs302;             /* write */
        } else {
            flatzs116zssimpflatzs297          = flatzs115zssimpflatzs295;             /* write */
            flatzs116zssimpflatzs298          = 0.0;                                  /* write */
        }
        
        flatzs116zssimpflatzs303              = flatzs116zssimpflatzs297;             /* read */
        flatzs116zssimpflatzs304              = flatzs116zssimpflatzs298;             /* read */
        flatzs111zssimpflatzs271              = flatzs116zssimpflatzs303;             /* write */
        flatzs111zssimpflatzs272              = flatzs116zssimpflatzs304;             /* write */
    } else {
        flatzs111zssimpflatzs271              = flatzs110zssimpflatzs269;             /* write */
        flatzs111zssimpflatzs272              = 0.0;                                  /* write */
    }
    
    flatzs111zssimpflatzs305                  = flatzs111zssimpflatzs271;             /* read */
    flatzs111zssimpflatzs306                  = flatzs111zssimpflatzs272;             /* read */
    s->replZCoutputzsixzs0                    = flatzs111zssimpflatzs305;             /* output */
    s->replZCoutputzsixzs1                    = flatzs111zssimpflatzs306;             /* output */
}

- C evaluation:
[homer, 3.1112698372208096]

- Core evaluation:
[homer, 3.1112698372208096]

> > -- Times
> - Flattened (simplified), not typechecked:
conv/3 = TIME
conv/4 = MAX_MAP_SIZE
init acc/s/reify/2/conv/5/simpflat/11@{Error} = ExceptFold1NoValue@{Error};
init acc/s/reify/2/conv/5/simpflat/12@{Time} = 1858-11-17T00:00:00Z@{Time};
load_resumable@{Error} acc/s/reify/2/conv/5/simpflat/11;
load_resumable@{Time} acc/s/reify/2/conv/5/simpflat/12;
for_facts (conv/2@{Time}, conv/1@{FactIdentifier}, conv/0/simpflat/25@{Error}, conv/0/simpflat/26@{Int}, conv/0/simpflat/27@{Time}) in new
{
  read s/reify/2/conv/5/aval/0/simpflat/13 = acc/s/reify/2/conv/5/simpflat/11 [Error];
  read s/reify/2/conv/5/aval/0/simpflat/14 = acc/s/reify/2/conv/5/simpflat/12 [Time];
  init flat/0/simpflat/15@{Error} = ExceptNotAnError@{Error};
  init flat/0/simpflat/16@{Time} = 1858-11-17T00:00:00Z@{Time};
  if (eq#@{Error} s/reify/2/conv/5/aval/0/simpflat/13 (ExceptNotAnError@{Error}))
  {
    init flat/4@{Time} = 1858-11-17T00:00:00Z@{Time};
    let simpflat/32 = Time_daysDifference# (1980-01-06T00:00:00Z@{Time}) conv/0/simpflat/27;
    let simpflat/33 = negate#@{Int} simpflat/32;
    let simpflat/34 = Time_minusDays# (2000-01-01T00:00:00Z@{Time}) simpflat/33;
    if (gt#@{Time} simpflat/34 s/reify/2/conv/5/aval/0/simpflat/14)
    {
      let simpflat/37 = Time_daysDifference# (1980-01-06T00:00:00Z@{Time}) conv/0/simpflat/27;
      let simpflat/38 = negate#@{Int} simpflat/37;
      write flat/4 = Time_minusDays# (2000-01-01T00:00:00Z@{Time}) simpflat/38;
    }
    else
    {
      write flat/4 = s/reify/2/conv/5/aval/0/simpflat/14;
    }
    read flat/4 = flat/4 [Time];
    write flat/0/simpflat/15 = ExceptNotAnError@{Error};
    write flat/0/simpflat/16 = flat/4;
  }
  else
  {
    init flat/3/simpflat/17@{Error} = ExceptNotAnError@{Error};
    init flat/3/simpflat/18@{Time} = 1858-11-17T00:00:00Z@{Time};
    if (eq#@{Error} (ExceptFold1NoValue@{Error}) s/reify/2/conv/5/aval/0/simpflat/13)
    {
      write flat/3/simpflat/17 = ExceptNotAnError@{Error};
      let simpflat/51 = Time_daysDifference# (1980-01-06T00:00:00Z@{Time}) conv/0/simpflat/27;
      let simpflat/52 = negate#@{Int} simpflat/51;
      write flat/3/simpflat/18 = Time_minusDays# (2000-01-01T00:00:00Z@{Time}) simpflat/52;
    }
    else
    {
      write flat/3/simpflat/17 = s/reify/2/conv/5/aval/0/simpflat/13;
      write flat/3/simpflat/18 = 1858-11-17T00:00:00Z@{Time};
    }
    read flat/3/simpflat/19 = flat/3/simpflat/17 [Error];
    read flat/3/simpflat/20 = flat/3/simpflat/18 [Time];
    write flat/0/simpflat/15 = flat/3/simpflat/19;
    write flat/0/simpflat/16 = flat/3/simpflat/20;
  }
  read flat/0/simpflat/21 = flat/0/simpflat/15 [Error];
  read flat/0/simpflat/22 = flat/0/simpflat/16 [Time];
  write acc/s/reify/2/conv/5/simpflat/11 = flat/0/simpflat/21;
  write acc/s/reify/2/conv/5/simpflat/12 = flat/0/simpflat/22;
}
save_resumable@{Error} acc/s/reify/2/conv/5/simpflat/11;
save_resumable@{Time} acc/s/reify/2/conv/5/simpflat/12;
read s/reify/2/conv/5/simpflat/23 = acc/s/reify/2/conv/5/simpflat/11 [Error];
read s/reify/2/conv/5/simpflat/24 = acc/s/reify/2/conv/5/simpflat/12 [Time];
output@{(Sum Error Time)} repl:output (s/reify/2/conv/5/simpflat/23@{Error}, s/reify/2/conv/5/simpflat/24@{Time});

- Flattened Avalanche (simplified), typechecked:
conv/3 = TIME
conv/4 = MAX_MAP_SIZE
init acc/s/reify/2/conv/5/simpflat/11@{Error} = ExceptFold1NoValue@{Error};
init acc/s/reify/2/conv/5/simpflat/12@{Time} = 1858-11-17T00:00:00Z@{Time};
load_resumable@{Error} acc/s/reify/2/conv/5/simpflat/11;
load_resumable@{Time} acc/s/reify/2/conv/5/simpflat/12;
for_facts (conv/2@{Time}, conv/1@{FactIdentifier}, conv/0/simpflat/25@{Error}, conv/0/simpflat/26@{Int}, conv/0/simpflat/27@{Time}) in new
{
  read s/reify/2/conv/5/aval/0/simpflat/13 = acc/s/reify/2/conv/5/simpflat/11 [Error];
  read s/reify/2/conv/5/aval/0/simpflat/14 = acc/s/reify/2/conv/5/simpflat/12 [Time];
  init flat/0/simpflat/15@{Error} = ExceptNotAnError@{Error};
  init flat/0/simpflat/16@{Time} = 1858-11-17T00:00:00Z@{Time};
  if (eq#@{Error} s/reify/2/conv/5/aval/0/simpflat/13 (ExceptNotAnError@{Error}))
  {
    init flat/4@{Time} = 1858-11-17T00:00:00Z@{Time};
    let simpflat/32 = Time_daysDifference# (1980-01-06T00:00:00Z@{Time}) conv/0/simpflat/27;
    let simpflat/33 = negate#@{Int} simpflat/32;
    let simpflat/34 = Time_minusDays# (2000-01-01T00:00:00Z@{Time}) simpflat/33;
    if (gt#@{Time} simpflat/34 s/reify/2/conv/5/aval/0/simpflat/14)
    {
      let simpflat/37 = Time_daysDifference# (1980-01-06T00:00:00Z@{Time}) conv/0/simpflat/27;
      let simpflat/38 = negate#@{Int} simpflat/37;
      write flat/4 = Time_minusDays# (2000-01-01T00:00:00Z@{Time}) simpflat/38;
    }
    else
    {
      write flat/4 = s/reify/2/conv/5/aval/0/simpflat/14;
    }
    read flat/4 = flat/4 [Time];
    write flat/0/simpflat/15 = ExceptNotAnError@{Error};
    write flat/0/simpflat/16 = flat/4;
  }
  else
  {
    init flat/3/simpflat/17@{Error} = ExceptNotAnError@{Error};
    init flat/3/simpflat/18@{Time} = 1858-11-17T00:00:00Z@{Time};
    if (eq#@{Error} (ExceptFold1NoValue@{Error}) s/reify/2/conv/5/aval/0/simpflat/13)
    {
      write flat/3/simpflat/17 = ExceptNotAnError@{Error};
      let simpflat/51 = Time_daysDifference# (1980-01-06T00:00:00Z@{Time}) conv/0/simpflat/27;
      let simpflat/52 = negate#@{Int} simpflat/51;
      write flat/3/simpflat/18 = Time_minusDays# (2000-01-01T00:00:00Z@{Time}) simpflat/52;
    }
    else
    {
      write flat/3/simpflat/17 = s/reify/2/conv/5/aval/0/simpflat/13;
      write flat/3/simpflat/18 = 1858-11-17T00:00:00Z@{Time};
    }
    read flat/3/simpflat/19 = flat/3/simpflat/17 [Error];
    read flat/3/simpflat/20 = flat/3/simpflat/18 [Time];
    write flat/0/simpflat/15 = flat/3/simpflat/19;
    write flat/0/simpflat/16 = flat/3/simpflat/20;
  }
  read flat/0/simpflat/21 = flat/0/simpflat/15 [Error];
  read flat/0/simpflat/22 = flat/0/simpflat/16 [Time];
  write acc/s/reify/2/conv/5/simpflat/11 = flat/0/simpflat/21;
  write acc/s/reify/2/conv/5/simpflat/12 = flat/0/simpflat/22;
}
save_resumable@{Error} acc/s/reify/2/conv/5/simpflat/11;
save_resumable@{Time} acc/s/reify/2/conv/5/simpflat/12;
read s/reify/2/conv/5/simpflat/23 = acc/s/reify/2/conv/5/simpflat/11 [Error];
read s/reify/2/conv/5/simpflat/24 = acc/s/reify/2/conv/5/simpflat/12 [Time];
output@{(Sum Error Time)} repl:output (s/reify/2/conv/5/simpflat/23@{Error}, s/reify/2/conv/5/simpflat/24@{Time});

- C:
#line 1 "cluster state #0 - repl:input"

typedef struct {
    itime_t          convzs3;
    iint_t           new_count;
    ierror_t         *new_convzs0zssimpflatzs25;
    iint_t           *new_convzs0zssimpflatzs26;
    itime_t          *new_convzs0zssimpflatzs27;
} input_replZCinput_t;

typedef struct {
    /* runtime */
    anemone_mempool_t *mempool;
    iint_t           max_map_size;

    /* inputs */
    input_replZCinput_t input;

  /* kernel 0/0 */
    /* outputs */
    ierror_t         replZCoutputzsixzs0;
    itime_t          replZCoutputzsixzs1;

    /* resumables: values */
    itime_t          res_0_0_acczsszsreifyzs2zsconvzs5zssimpflatzs12;
    ierror_t         res_0_0_acczsszsreifyzs2zsconvzs5zssimpflatzs11;

    /* resumables: has flags */
    ibool_t          has_flags_start_0_0;
    ibool_t          has_0_0_acczsszsreifyzs2zsconvzs5zssimpflatzs12;
    ibool_t          has_0_0_acczsszsreifyzs2zsconvzs5zssimpflatzs11;
    ibool_t          has_flags_end_0_0;


} icluster_0_t;

iint_t size_of_icluster_0 ()
{
    return sizeof (icluster_0_t);
}

#line 1 "kernel function #0 - repl:input icluster_0_kernel_0"
void icluster_0_kernel_0(icluster_0_t *s)
{
    itime_t          flatzs4;
    itime_t          szsreifyzs2zsconvzs5zssimpflatzs24;
    ierror_t         szsreifyzs2zsconvzs5zssimpflatzs23;
    itime_t          szsreifyzs2zsconvzs5zsavalzs0zssimpflatzs14;
    ierror_t         szsreifyzs2zsconvzs5zsavalzs0zssimpflatzs13;
    itime_t          acczsszsreifyzs2zsconvzs5zssimpflatzs12;
    ierror_t         acczsszsreifyzs2zsconvzs5zssimpflatzs11;
    ierror_t         flatzs0zssimpflatzs15;
    itime_t          flatzs0zssimpflatzs16;
    itime_t          flatzs3zssimpflatzs18;
    ierror_t         flatzs3zssimpflatzs19;
    ierror_t         flatzs3zssimpflatzs17;
    itime_t          flatzs3zssimpflatzs20;
    itime_t          flatzs0zssimpflatzs22;
    ierror_t         flatzs0zssimpflatzs21;

    anemone_mempool_t *mempool                = s->mempool;
    itime_t          convzs3                  = s->input.convzs3;
    iint_t           convzs4                  = s->max_map_size;

    acczsszsreifyzs2zsconvzs5zssimpflatzs11   = ierror_fold1_no_value;                /* init */
    acczsszsreifyzs2zsconvzs5zssimpflatzs12   = 0x7420b1100000000;                    /* init */
    
    if (s->has_0_0_acczsszsreifyzs2zsconvzs5zssimpflatzs11) {
        acczsszsreifyzs2zsconvzs5zssimpflatzs11 = s->res_0_0_acczsszsreifyzs2zsconvzs5zssimpflatzs11; /* load */
    }
    
    if (s->has_0_0_acczsszsreifyzs2zsconvzs5zssimpflatzs12) {
        acczsszsreifyzs2zsconvzs5zssimpflatzs12 = s->res_0_0_acczsszsreifyzs2zsconvzs5zssimpflatzs12; /* load */
    }
    
    const iint_t     new_count                = s->input.new_count;
    const ierror_t  *const new_convzs0zssimpflatzs25 = s->input.new_convzs0zssimpflatzs25;
    const iint_t    *const new_convzs0zssimpflatzs26 = s->input.new_convzs0zssimpflatzs26;
    const itime_t   *const new_convzs0zssimpflatzs27 = s->input.new_convzs0zssimpflatzs27;
    
    for (iint_t i = 0; i < new_count; i++) {
        ifactid_t        convzs1              = i;
        itime_t          convzs2              = new_convzs0zssimpflatzs27[i];
        ierror_t         convzs0zssimpflatzs25 = new_convzs0zssimpflatzs25[i];
        iint_t           convzs0zssimpflatzs26 = new_convzs0zssimpflatzs26[i];
        itime_t          convzs0zssimpflatzs27 = new_convzs0zssimpflatzs27[i];
        szsreifyzs2zsconvzs5zsavalzs0zssimpflatzs13 = acczsszsreifyzs2zsconvzs5zssimpflatzs11; /* read */
        szsreifyzs2zsconvzs5zsavalzs0zssimpflatzs14 = acczsszsreifyzs2zsconvzs5zssimpflatzs12; /* read */
        flatzs0zssimpflatzs15                 = ierror_not_an_error;                  /* init */
        flatzs0zssimpflatzs16                 = 0x7420b1100000000;                    /* init */
        
        if (ierror_eq (szsreifyzs2zsconvzs5zsavalzs0zssimpflatzs13, ierror_not_an_error)) {
            flatzs4                           = 0x7420b1100000000;                    /* init */
            iint_t           simpflatzs32     = itime_days_diff (0x7bc010600000000, convzs0zssimpflatzs27); /* let */
            iint_t           simpflatzs33     = iint_neg (simpflatzs32);              /* let */
            itime_t          simpflatzs34     = itime_minus_days (0x7d0010100000000, simpflatzs33); /* let */
            
            if (itime_gt (simpflatzs34, szsreifyzs2zsconvzs5zsavalzs0zssimpflatzs14)) {
                iint_t           simpflatzs37 = itime_days_diff (0x7bc010600000000, convzs0zssimpflatzs27); /* let */
                iint_t           simpflatzs38 = iint_neg (simpflatzs37);              /* let */
                flatzs4                       = itime_minus_days (0x7d0010100000000, simpflatzs38); /* write */
            } else {
                flatzs4                       = szsreifyzs2zsconvzs5zsavalzs0zssimpflatzs14; /* write */
            }
            
            flatzs4                           = flatzs4;                              /* read */
            flatzs0zssimpflatzs15             = ierror_not_an_error;                  /* write */
            flatzs0zssimpflatzs16             = flatzs4;                              /* write */
        } else {
            flatzs3zssimpflatzs17             = ierror_not_an_error;                  /* init */
            flatzs3zssimpflatzs18             = 0x7420b1100000000;                    /* init */
            
            if (ierror_eq (ierror_fold1_no_value, szsreifyzs2zsconvzs5zsavalzs0zssimpflatzs13)) {
                flatzs3zssimpflatzs17         = ierror_not_an_error;                  /* write */
                iint_t           simpflatzs51 = itime_days_diff (0x7bc010600000000, convzs0zssimpflatzs27); /* let */
                iint_t           simpflatzs52 = iint_neg (simpflatzs51);              /* let */
                flatzs3zssimpflatzs18         = itime_minus_days (0x7d0010100000000, simpflatzs52); /* write */
            } else {
                flatzs3zssimpflatzs17         = szsreifyzs2zsconvzs5zsavalzs0zssimpflatzs13; /* write */
                flatzs3zssimpflatzs18         = 0x7420b1100000000;                    /* write */
            }
            
            flatzs3zssimpflatzs19             = flatzs3zssimpflatzs17;                /* read */
            flatzs3zssimpflatzs20             = flatzs3zssimpflatzs18;                /* read */
            flatzs0zssimpflatzs15             = flatzs3zssimpflatzs19;                /* write */
            flatzs0zssimpflatzs16             = flatzs3zssimpflatzs20;                /* write */
        }
        
        flatzs0zssimpflatzs21                 = flatzs0zssimpflatzs15;                /* read */
        flatzs0zssimpflatzs22                 = flatzs0zssimpflatzs16;                /* read */
        acczsszsreifyzs2zsconvzs5zssimpflatzs11 = flatzs0zssimpflatzs21;              /* write */
        acczsszsreifyzs2zsconvzs5zssimpflatzs12 = flatzs0zssimpflatzs22;              /* write */
    }
    
    s->has_0_0_acczsszsreifyzs2zsconvzs5zssimpflatzs11 = itrue;                       /* save */
    s->res_0_0_acczsszsreifyzs2zsconvzs5zssimpflatzs11 = acczsszsreifyzs2zsconvzs5zssimpflatzs11; /* save */
    
    s->has_0_0_acczsszsreifyzs2zsconvzs5zssimpflatzs12 = itrue;                       /* save */
    s->res_0_0_acczsszsreifyzs2zsconvzs5zssimpflatzs12 = acczsszsreifyzs2zsconvzs5zssimpflatzs12; /* save */
    
    szsreifyzs2zsconvzs5zssimpflatzs23        = acczsszsreifyzs2zsconvzs5zssimpflatzs11; /* read */
    szsreifyzs2zsconvzs5zssimpflatzs24        = acczsszsreifyzs2zsconvzs5zssimpflatzs12; /* read */
    s->replZCoutputzsixzs0                    = szsreifyzs2zsconvzs5zssimpflatzs23;   /* output */
    s->replZCoutputzsixzs1                    = szsreifyzs2zsconvzs5zssimpflatzs24;   /* output */
}

- C evaluation:
[homer, 2029-12-27
,marge, 2009-12-12]

- Core evaluation:
[homer, 2029-12-27
,marge, 2009-12-12]

> > -- Math
> ok, c is now off
ok, flatten (simplified) is now off
> > - C evaluation:
[homer, tombstone]

- Core evaluation:
[homer, tombstone]

> > - C evaluation:
[homer, tombstone]

- Core evaluation:
[homer, tombstone]

> 